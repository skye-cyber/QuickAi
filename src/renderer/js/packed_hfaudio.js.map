{"version":3,"file":"packed_hfaudio.js","mappings":"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","sources":["webpack://QuickAi/webpack/runtime/async module","webpack://QuickAi/./src/renderer/js/hfaudio.js","webpack://QuickAi/../node_modules/@huggingface/inference/dist/index.js","webpack://QuickAi/webpack/bootstrap","webpack://QuickAi/webpack/runtime/define property getters","webpack://QuickAi/webpack/runtime/hasOwnProperty shorthand","webpack://QuickAi/webpack/startup"],"sourcesContent":["var webpackQueues = typeof Symbol === \"function\" ? Symbol(\"webpack queues\") : \"__webpack_queues__\";\nvar webpackExports = typeof Symbol === \"function\" ? Symbol(\"webpack exports\") : \"__webpack_exports__\";\nvar webpackError = typeof Symbol === \"function\" ? Symbol(\"webpack error\") : \"__webpack_error__\";\nvar resolveQueue = (queue) => {\n\tif(queue && queue.d < 1) {\n\t\tqueue.d = 1;\n\t\tqueue.forEach((fn) => (fn.r--));\n\t\tqueue.forEach((fn) => (fn.r-- ? fn.r++ : fn()));\n\t}\n}\nvar wrapDeps = (deps) => (deps.map((dep) => {\n\tif(dep !== null && typeof dep === \"object\") {\n\t\tif(dep[webpackQueues]) return dep;\n\t\tif(dep.then) {\n\t\t\tvar queue = [];\n\t\t\tqueue.d = 0;\n\t\t\tdep.then((r) => {\n\t\t\t\tobj[webpackExports] = r;\n\t\t\t\tresolveQueue(queue);\n\t\t\t}, (e) => {\n\t\t\t\tobj[webpackError] = e;\n\t\t\t\tresolveQueue(queue);\n\t\t\t});\n\t\t\tvar obj = {};\n\t\t\tobj[webpackQueues] = (fn) => (fn(queue));\n\t\t\treturn obj;\n\t\t}\n\t}\n\tvar ret = {};\n\tret[webpackQueues] = x => {};\n\tret[webpackExports] = dep;\n\treturn ret;\n}));\n__webpack_require__.a = (module, body, hasAwait) => {\n\tvar queue;\n\thasAwait && ((queue = []).d = -1);\n\tvar depQueues = new Set();\n\tvar exports = module.exports;\n\tvar currentDeps;\n\tvar outerResolve;\n\tvar reject;\n\tvar promise = new Promise((resolve, rej) => {\n\t\treject = rej;\n\t\touterResolve = resolve;\n\t});\n\tpromise[webpackExports] = exports;\n\tpromise[webpackQueues] = (fn) => (queue && fn(queue), depQueues.forEach(fn), promise[\"catch\"](x => {}));\n\tmodule.exports = promise;\n\tbody((deps) => {\n\t\tcurrentDeps = wrapDeps(deps);\n\t\tvar fn;\n\t\tvar getResult = () => (currentDeps.map((d) => {\n\t\t\tif(d[webpackError]) throw d[webpackError];\n\t\t\treturn d[webpackExports];\n\t\t}))\n\t\tvar promise = new Promise((resolve) => {\n\t\t\tfn = () => (resolve(getResult));\n\t\t\tfn.r = 0;\n\t\t\tvar fnQueue = (q) => (q !== queue && !depQueues.has(q) && (depQueues.add(q), q && !q.d && (fn.r++, q.push(fn))));\n\t\t\tcurrentDeps.map((dep) => (dep[webpackQueues](fnQueue)));\n\t\t});\n\t\treturn fn.r ? promise : getResult();\n\t}, (err) => ((err ? reject(promise[webpackError] = err) : outerResolve(exports)), resolveQueue(queue)));\n\tqueue && queue.d < 0 && (queue.d = 0);\n};","import { HfInference } from \"@huggingface/inference\";\n\nconst hf_API_KEY = await window.electron.HUGGINGHUB_API_KEY()\n\nconst client = new HfInference(hf_API_KEY);\n\nlet timer = null\n//define var to hold current loader\nlet currentLoader = null;\n\nlet currentAudioElement = null;\ndocument.addEventListener('DOMContentLoaded', ()=>{\n\ttimer = new window.Timer;\n});\n\nconst LoaderEvent = new CustomEvent('LoaderHandler', {\n\tdetail: {\n\t\tmessage: 'Loader outdid its purpose!',\n\t}\n});\n\nasync function autoSpeech(data){\n\n\tconst output = await client.automaticSpeechRecognition({\n\t\tdata,\n\t\tmodel: \"openai/whisper-large-v3-turbo\",\n\t\tprovider: \"hf-inference\",\n\t});\n\n\tconsole.log(output);\n\treturn output\n}\n\nconst chatArea = document.getElementById(\"chatArea\");\n//const userInput = document.getElementById(\"userInput\");\n//const sendBtn = document.getElementById(\"sendBtn\");\nconst AutoScroll = document.getElementById(\"AutoScroll\");\n\nfunction displayResponse(text){\n\tconst aiMessage = document.createElement(\"div\");\n\n\tconst aiMessageUId = `msg_${Math.random().toString(30).substring(3, 9)}`;\n\taiMessage.classList.add(\"flex\", \"justify-start\", \"mb-12\", \"overflow-wrap\");\n\tchatArea.appendChild(aiMessage);\n\n\taiMessage.innerHTML = `\n\t<section class=\"relative w-fit max-w-full lg:max-w-6xl mb-8 p-2\">\n\t<div class=\"${aiMessageUId} bg-gray-200 py-4 text-gray-800 dark:bg-[#28185a] dark:text-white rounded-lg px-4 mb-6 pb-4\">\n\t<p style=\"color: #333;\">${window.marked(text)}</p>\n\t</div>\n\t<section class=\"options flex absolute bottom-2 left-0 space-x-4 cursor-pointer\">\n\t<div class=\"p-1 border-none\" id=\"exportButton\" onclick=\"toggleExportOptions(this);\" title=\"Export\">\n\t<svg class=\"fill-black dark:fill-gray-700 text-gray-600 bg-[#5555ff] dark:bg-white w-6 h-6 rounded-full\" viewBox=\"0 0 24 24\">\n\t<path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"/>\n\t</svg>\n\t</div>\n\t<div class=\"rounded-lg p-1 cursor-pointer\" aria-label=\"Copy\" title=\"Copy\" id=\"copy-all\" onclick=\"CopyAll('.${aiMessageUId}');\">\n\t<svg class=\"w-5 md:w-6 h-5 md:h-6\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t<path class=\"fill-black dark:fill-pink-300\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z\"/></path>\n\t</svg>\n\t</div>\n\t</section>\n\t<div id=\"exportOptions\" class=\"hidden block absolute bottom-10 left-0 bg-white dark:bg-gray-800 p-2 rounded shadow-md z-50 transition-300\">\n\t<ul class=\"list-none p-0\">\n\t<li class=\"mb-2\">\n\t<a href=\"\" class=\"text-blue-500 dark:text-blue-400\" onclick=\"HTML2Pdf(event, '.${aiMessageUId}')\">Export to PDF</a>\n\t</li>\n\t<li class=\"mb-2\">\n\t<a href=\"\" class=\"text-blue-500 dark:text-blue-400\" onclick=\"HTML2Jpg(event, '.${aiMessageUId}')\">Export to JPG</a>\n\t</li>\n\t<li>\n\t<a href=\"\" class=\"text-blue-500 dark:text-blue-400\" onclick=\"HTML2Word(event, '.${aiMessageUId}')\">Export to DOCX</a>\n\t</li>\n\t<li>\n\t<a href=\"\" class=\"cursor-not-allowed text-blue-500 dark:text-blue-400 decoration-underline\" onclick=\"SuperHTML2Word(event, '.${aiMessageUId}')\">Word Export Advance</a>\n\t</li>\n\t</ul>\n\t</div>\n\t</section>\n\t`;\n\tAutoScroll.checked ? scrollToBottom(chatArea) : null;\n\twindow.addCopyListeners(); // Assuming this function adds copy functionality to code blocks\n\t// Debounce MathJax rendering to avoid freezing\n\twindow.debounceRenderMathJax(aiMessageUId);\n}\n\nfunction displayUserAudio(path) {\n\tconst container = document.createElement('section');\n\tconst audioElement = document.createElement('audio');\n\tconst loaderElement = document.createElement('div');\n\tconst wrapper = document.createElement('div');\n\twrapper.classList.add('flex', 'justify-end');\n\n\t// Add classes for styling (using Tailwind CSS)\n\tcontainer.classList.add(\n\t\t'flex', 'justify-end', 'items-center', 'p-2', 'w-fit', 'rounded-lg', 'bg-blue-300', 'dark:bg-gray-700', 'my-2'\n\t);\n\tloaderElement.classList.add(\n\t\t'animate-spin', 'rounded-full', 'h-12', 'w-12', 'border-t-2', 'border-blue-500', 'ml-2'\n\t);\n\n\t// Set audio source\n\taudioElement.src = path;\n\taudioElement.controls = true; // Add controls for playback\n\n\t// Add loading animation\n\tloaderElement.innerHTML = ''; // You can leave this empty for a simple spinner\n\n\t// Append elements to the container\n\tcontainer.appendChild(audioElement);\n\tcontainer.appendChild(loaderElement);\n\twrapper.appendChild(container);\n\n\t// Add container to main chat area\n\tchatArea.appendChild(wrapper);\n\tAutoScroll.checked ? scrollToBottom(chatArea) : null;\n\tloaderElement.addEventListener('LoaderHandler', removeLoader)\n\t// update current loader\n\tcurrentLoader = loaderElement\n\tcurrentAudioElement = container;\n}\n\nfunction removeLoader(event){\n\tevent.target.remove();\n}\n\nasync function main(fpath){\n\ttry{\n\t\tdocument.getElementById('suggestions') ? document.getElementById('suggestions').classList.add('hidden') : \"\";\n\n\t\t//start timer\n\t\ttimer.trackTime(\"start\");\n\n\t\twindow.HandleProcessingEventChanges('show')\n\t\t// Add audio to user interface\n\t\tdisplayUserAudio(fpath)\n\t\t//Read data from file\n\t\tconst data = await window.electron.readFileData(fpath)\n\n\t\t// call automaticSpeechRecognition\n\t\tconst response = await autoSpeech(data)\n\n\t\t// add ai reponse to the interface\n\t\tdisplayResponse(response)\n\n\t\twindow.HandleProcessingEventChanges('hide')\n\t\t//stop timer\n\t\ttimer.trackTime(\"stop\");\n\n\t\tcurrentLoader.dispatchEvent(LoaderEvent);\n\n\t\tutilityScriptExists()\n\n\t\treturn true;\n\t}catch(error){\n\t\thandleRequestError(error, fpath)\n\t\tconsole.log(error)\n\t}\n}\n\nfunction handleRequestError(error, fpath) {\n\tcurrentLoader.dispatchEvent(LoaderEvent);\n\twindow.HandleProcessingEventChanges('hide')\n\t//interrupt timer\n\ttimer.trackTime(\"interrupt\");\n\n\tconst errorContainer = document.getElementById('errorContainer');\n\tconst errorArea = document.getElementById('errorArea');\n\tconst closeModal = document.getElementById('closeEModal');\n\tconst retry = document.getElementById('retryBt');\n\n\tcloseModal.addEventListener('click', (event) => {\n\t\tevent.stopPropagation();\n\t\tHideErrorModal();\n\t});\n\n\tfunction showError() {\n\t\tsetTimeout(() => {\n\t\t\terrorContainer.classList.remove(\"hidden\");\n\t\t\terrorContainer.classList.add('left-1/2', 'opacity-100', 'pointer-events-auto');\n\t\t}, 200); // 0.3 second delay\n\t\tlet ErrorMs = (error.message === \"Failed to fetch\") ? \"Connection Error: Check your Internet!\" : error.message;\n\t\terrorArea.textContent = ErrorMs;\n\t}\n\n\t// Display error\n\tshowError()\n\n\t// Clone the retry button and replace the original one\n\tconst clonedRetry = retry.cloneNode(true);\n\tretry.replaceWith(clonedRetry);\n\n\t// Remove all event listeners from the cloned button\n\tconst newRetry = document.getElementById('retryBt');\n\n\t//console.log(newRetry);\n\tnewRetry.removeEventListener('click', retryHandler);\n\n\t// Re-attach the click event listener\n\tnewRetry.addEventListener('click', function() {\n\t\tretryHandler();\n\t});\n\n\tasync function HideErrorModal() {\n\t\t// Slide modal to the left and fade out\n\t\tsetTimeout(() => {\n\t\t\terrorContainer.classList.remove('left-1/2', '-translate-x-1/2');\n\t\t\terrorContainer.classList.add('-translate-x-full', 'opacity-0', 'pointer-events-none');\n\t\t}, 0);\n\n\t\t// Reset transform after fully fading out and moving off-screen\n\t\tsetTimeout(() => {\n\t\t\terrorContainer.classList.remove('opacity-100', '-translate-x-full');\n\t\t\terrorContainer.classList.add('hidden', '-translate-x-1/2');\n\t\t}, 0); // 1 second for reset\n\t}\n\n\tasync function retryHandler(){\n\t\tawait HideErrorModal()\n\t\tcurrentAudioElement.remove()\n\t\tmain(fpath)\n\t}\n}\n\nfunction utilityScriptExists(){\n\tconst scripts = document.getElementsByTagName('script');\n\tlet exists = false;\n\tfor (let script of scripts) {\n\t\tif (script.src.includes('packed_utility.js')) {\n\t\t\tconsole.log(\"Utility script already exits. Not adding\"); // Logs the matching script element\n\t\t\texists = true\n\t\t\treturn exists\n\t\t}\n\t}\n\tconsole.log(\"Utility missing. Adding\");\n\t// add export utility script\n\t// Sending a message to the main process if script does not exist already\n\twindow.electron.send('toMain', { message: 'set-Utitility-Script' })\n\treturn exists\n}\n\nconst microphone = document.getElementById('microphone');\nconst microphoneSVG = document.getElementById('microphoneSVG');\nconst recordingModal = document.getElementById('recordingModal');\nconst recordingTime = document.getElementById('recordingTime');\nconst pauseButton = document.getElementById('pauseButton');\nconst startButton = document.getElementById('startButton');\nconst finishButton = document.getElementById('finishButton');\nconst cancelRecButton = document.getElementById('cancelButton');\n\nlet mediaRecorder;\nlet startTime;\nlet audioChunks = [];\nlet isRecording = false;\nlet timerInterval;\nlet elapsedTime = 0; // To track the elapsed time when paused\nlet isPaused = false;\nlet canSave = true;\n\n// Function to start recording\nasync function startRecording(task=null) {\n\ttry {\n\t\tif (task === \"release\"){\n\t\t\tawait releaseMediaDevice();\n\t\t\tfinishButton.classList.add('cursor-not-allowed')\n\t\t\treturn\n\t\t}\n\t\tmicrophoneSVG.classList.add('animate-pulse')\n\n\t\tfinishButton.classList.remove('cursor-not-allowed')\n\n\t\t// To release the media device\n\t\tasync function releaseMediaDevice() {\n\t\t\ttry{\n\t\t\t\t// Stop all tracks in the MediaStream\n\t\t\t\tstream.getTracks().forEach(track => track.stop());\n\t\t\t\tconsole.log(\"Media device released.\");\n\t\t\t}catch(error){\n\t\t\t\t//\n\t\t\t}\n\t\t}\n\n\t\tconst stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n\t\tmediaRecorder = new MediaRecorder(stream);\n\n\t\tmediaRecorder.ondataavailable = event => {\n\t\t\taudioChunks.push(event.data);\n\t\t};\n\n\t\tmediaRecorder.onstop = async (event) => {\n\t\t\tif (canSave){\n\t\t\tconst audioBlob = new Blob(audioChunks, { type: 'audio/wav' });\n\n\t\t\tmicrophoneSVG.classList.remove('animate-pulse')\n\n\t\t\t// Save the audioBlob to a temporary file\n\t\t\tconst savePath = await window.electron.saveRecording(audioBlob);\n\t\t\tconsole.log(savePath)\n\n\t\t\t// Release microphone\n\t\t\tawait releaseMediaDevice();\n\n\t\t\t// call main\n\t\t\tmain(savePath)\n\t\t\t}\n\t\t\taudioChunks = [];\n\t\t};\n\n\t\tmediaRecorder.start();\n\t\tstartTime = Date.now();\n\t\tisRecording = true;\n\t\tstartButton.classList.add('hidden');\n\t\tpauseButton.classList.remove('hidden');\n\t\tstartTimer();\n\t} catch (err) {\n\t\tconsole.error('Error accessing microphone:', err);\n\t}\n}\n\n// Function to pause/resume recording\nfunction pauseRecording() {\n\tif (isRecording) {\n\t\tmediaRecorder.pause();\n\t\tpauseButton.classList.add('hidden');\n\t\tstartButton.classList.remove('hidden');\n\t\tclearInterval(timerInterval);\n\t\tisRecording = false;\n\t\tisPaused = true;\n\t\tmicrophoneSVG.classList.remove('animate-pulse')\n\t\tconsole.log(\"paused\", isPaused)\n\t}\n}\n\n//Resume Recording\nfunction ResumeRecording() {\n\tmicrophoneSVG.classList.add('animate-pulse')\n\tmediaRecorder.resume();\n\tpauseButton.classList.remove('hidden');\n\tstartButton.classList.add('hidden');\n\tstartTimer(true);\n\tisRecording = true;\n\tisPaused = false;\n\tconsole.log(\"Resumed\", isPaused)\n}\n// Function to stop recording\nfunction finishRecording() {\n\tmediaRecorder.stop();\n\tclearInterval(timerInterval);\n\trecordingTime.textContent = '00:00:00';\n\tpauseButton.classList.add('hidden');\n\tstartButton.classList.remove('hidden');\n\tisRecording = false;\n\tcanSave = true;\n\tconsole.log(\"Finished Recording\")\n\thideModal();\n\tstartRecording('release')\n\tmicrophoneSVG.classList.remove('animate-pulse')\n}\n\n// Function to cancel recording\nfunction cancelRecording() {\n\ttry{\n\t\tmediaRecorder.stop();\n\t}catch(err){\n\t\t//\n\t}\n\n\tclearInterval(timerInterval);\n\trecordingTime.textContent = '00:00:00';\n\tpauseButton.classList.add('hidden');\n\tstartButton.classList.remove('hidden');\n\tisRecording = false;\n\tisPaused = false;\n\tcanSave = false;\n\tconsole.log(\"Recording Cancelled\")\n\thideModal();\n\tstartRecording('release')\n\tmicrophoneSVG.classList.remove('animate-pulse')\n}\n\n// Function to update the recording time\nfunction startTimer(resume=false) {\n\t// Store the current time minus any previously elapsed time\n\tstartTime = resume===true ? (Date.now() - elapsedTime) : startTime;\n\t// Start the interval\n\ttimerInterval = setInterval(() => {\n\t\telapsedTime = Date.now() - startTime;\n\t\tconst formattedTime = formatTime(elapsedTime);\n\t\trecordingTime.textContent = formattedTime;\n\t}, 1000);\n}\n\n// Function to format the time\nfunction formatTime(milliseconds) {\n\tconst totalSeconds = Math.floor(milliseconds / 1000);\n\tconst seconds = totalSeconds % 60;\n\tconst minutes = Math.floor(totalSeconds / 60) % 60;\n\tconst hours = Math.floor(totalSeconds / 3600);\n\treturn `${pad(hours)}:${pad(minutes)}:${pad(seconds)}`;\n}\n\n// Helper function to pad numbers with leading zeros\nfunction pad(number) {\n\treturn (number < 10 ? '0' : '') + number;\n}\n\n// Function to show the modal\nfunction showModal() {\n\trecordingModal.classList.remove('hidden');\n}\n\n// Function to hide the modal\nfunction hideModal() {\n\trecordingModal.classList.add('hidden');\n}\n\n// Event listeners for the buttons\nstartButton.addEventListener('click', ()=>{\n\tif (isPaused){\n\t\tResumeRecording()\n\t}else{\n\t\tstartRecording()\n\t}\n});\npauseButton.addEventListener('click', pauseRecording);\nfinishButton.addEventListener('click', finishRecording);\ncancelRecButton.addEventListener('click', cancelRecording);\n\n//Add event listener to the microphone button to call showModal() and startRecording()\nmicrophone.addEventListener('click', function (){\n\tshowModal();\n})\n","var __defProp = Object.defineProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\n\n// src/tasks/index.ts\nvar tasks_exports = {};\n__export(tasks_exports, {\n  audioClassification: () => audioClassification,\n  audioToAudio: () => audioToAudio,\n  automaticSpeechRecognition: () => automaticSpeechRecognition,\n  chatCompletion: () => chatCompletion,\n  chatCompletionStream: () => chatCompletionStream,\n  documentQuestionAnswering: () => documentQuestionAnswering,\n  featureExtraction: () => featureExtraction,\n  fillMask: () => fillMask,\n  imageClassification: () => imageClassification,\n  imageSegmentation: () => imageSegmentation,\n  imageToImage: () => imageToImage,\n  imageToText: () => imageToText,\n  objectDetection: () => objectDetection,\n  questionAnswering: () => questionAnswering,\n  request: () => request,\n  sentenceSimilarity: () => sentenceSimilarity,\n  streamingRequest: () => streamingRequest,\n  summarization: () => summarization,\n  tableQuestionAnswering: () => tableQuestionAnswering,\n  tabularClassification: () => tabularClassification,\n  tabularRegression: () => tabularRegression,\n  textClassification: () => textClassification,\n  textGeneration: () => textGeneration,\n  textGenerationStream: () => textGenerationStream,\n  textToImage: () => textToImage,\n  textToSpeech: () => textToSpeech,\n  tokenClassification: () => tokenClassification,\n  translation: () => translation,\n  visualQuestionAnswering: () => visualQuestionAnswering,\n  zeroShotClassification: () => zeroShotClassification,\n  zeroShotImageClassification: () => zeroShotImageClassification\n});\n\n// src/utils/pick.ts\nfunction pick(o, props) {\n  return Object.assign(\n    {},\n    ...props.map((prop) => {\n      if (o[prop] !== void 0) {\n        return { [prop]: o[prop] };\n      }\n    })\n  );\n}\n\n// src/utils/typedInclude.ts\nfunction typedInclude(arr, v) {\n  return arr.includes(v);\n}\n\n// src/utils/omit.ts\nfunction omit(o, props) {\n  const propsArr = Array.isArray(props) ? props : [props];\n  const letsKeep = Object.keys(o).filter((prop) => !typedInclude(propsArr, prop));\n  return pick(o, letsKeep);\n}\n\n// src/lib/isUrl.ts\nfunction isUrl(modelOrUrl) {\n  return /^http(s?):/.test(modelOrUrl) || modelOrUrl.startsWith(\"/\");\n}\n\n// src/lib/getDefaultTask.ts\nvar taskCache = /* @__PURE__ */ new Map();\nvar CACHE_DURATION = 10 * 60 * 1e3;\nvar MAX_CACHE_ITEMS = 1e3;\nvar HF_HUB_URL = \"https://huggingface.co\";\nasync function getDefaultTask(model, accessToken, options) {\n  if (isUrl(model)) {\n    return null;\n  }\n  const key = `${model}:${accessToken}`;\n  let cachedTask = taskCache.get(key);\n  if (cachedTask && cachedTask.date < new Date(Date.now() - CACHE_DURATION)) {\n    taskCache.delete(key);\n    cachedTask = void 0;\n  }\n  if (cachedTask === void 0) {\n    const modelTask = await (options?.fetch ?? fetch)(`${HF_HUB_URL}/api/models/${model}?expand[]=pipeline_tag`, {\n      headers: accessToken ? { Authorization: `Bearer ${accessToken}` } : {}\n    }).then((resp) => resp.json()).then((json) => json.pipeline_tag).catch(() => null);\n    if (!modelTask) {\n      return null;\n    }\n    cachedTask = { task: modelTask, date: /* @__PURE__ */ new Date() };\n    taskCache.set(key, { task: modelTask, date: /* @__PURE__ */ new Date() });\n    if (taskCache.size > MAX_CACHE_ITEMS) {\n      taskCache.delete(taskCache.keys().next().value);\n    }\n  }\n  return cachedTask.task;\n}\n\n// src/lib/makeRequestOptions.ts\nvar HF_INFERENCE_API_BASE_URL = \"https://api-inference.huggingface.co\";\nvar tasks = null;\nasync function makeRequestOptions(args, options) {\n  const { accessToken, endpointUrl, ...otherArgs } = args;\n  let { model } = args;\n  const {\n    forceTask: task,\n    includeCredentials,\n    taskHint,\n    wait_for_model,\n    use_cache,\n    dont_load_model,\n    chatCompletion: chatCompletion2\n  } = options ?? {};\n  const headers = {};\n  if (accessToken) {\n    headers[\"Authorization\"] = `Bearer ${accessToken}`;\n  }\n  if (!model && !tasks && taskHint) {\n    const res = await fetch(`${HF_HUB_URL}/api/tasks`);\n    if (res.ok) {\n      tasks = await res.json();\n    }\n  }\n  if (!model && tasks && taskHint) {\n    const taskInfo = tasks[taskHint];\n    if (taskInfo) {\n      model = taskInfo.models[0].id;\n    }\n  }\n  if (!model) {\n    throw new Error(\"No model provided, and no default model found for this task\");\n  }\n  const binary = \"data\" in args && !!args.data;\n  if (!binary) {\n    headers[\"Content-Type\"] = \"application/json\";\n  }\n  if (wait_for_model) {\n    headers[\"X-Wait-For-Model\"] = \"true\";\n  }\n  if (use_cache === false) {\n    headers[\"X-Use-Cache\"] = \"false\";\n  }\n  if (dont_load_model) {\n    headers[\"X-Load-Model\"] = \"0\";\n  }\n  let url = (() => {\n    if (endpointUrl && isUrl(model)) {\n      throw new TypeError(\"Both model and endpointUrl cannot be URLs\");\n    }\n    if (isUrl(model)) {\n      console.warn(\"Using a model URL is deprecated, please use the `endpointUrl` parameter instead\");\n      return model;\n    }\n    if (endpointUrl) {\n      return endpointUrl;\n    }\n    if (task) {\n      return `${HF_INFERENCE_API_BASE_URL}/pipeline/${task}/${model}`;\n    }\n    return `${HF_INFERENCE_API_BASE_URL}/models/${model}`;\n  })();\n  if (chatCompletion2 && !url.endsWith(\"/chat/completions\")) {\n    url += \"/v1/chat/completions\";\n  }\n  let credentials;\n  if (typeof includeCredentials === \"string\") {\n    credentials = includeCredentials;\n  } else if (includeCredentials === true) {\n    credentials = \"include\";\n  }\n  const info = {\n    headers,\n    method: \"POST\",\n    body: binary ? args.data : JSON.stringify({\n      ...otherArgs.model && isUrl(otherArgs.model) ? omit(otherArgs, \"model\") : otherArgs\n    }),\n    ...credentials && { credentials },\n    signal: options?.signal\n  };\n  return { url, info };\n}\n\n// src/tasks/custom/request.ts\nasync function request(args, options) {\n  const { url, info } = await makeRequestOptions(args, options);\n  const response = await (options?.fetch ?? fetch)(url, info);\n  if (options?.retry_on_error !== false && response.status === 503 && !options?.wait_for_model) {\n    return request(args, {\n      ...options,\n      wait_for_model: true\n    });\n  }\n  if (!response.ok) {\n    if (response.headers.get(\"Content-Type\")?.startsWith(\"application/json\")) {\n      const output = await response.json();\n      if ([400, 422, 404, 500].includes(response.status) && options?.chatCompletion) {\n        throw new Error(`Server ${args.model} does not seem to support chat completion. Error: ${output.error}`);\n      }\n      if (output.error) {\n        throw new Error(JSON.stringify(output.error));\n      }\n    }\n    throw new Error(\"An error occurred while fetching the blob\");\n  }\n  if (response.headers.get(\"Content-Type\")?.startsWith(\"application/json\")) {\n    return await response.json();\n  }\n  return await response.blob();\n}\n\n// src/vendor/fetch-event-source/parse.ts\nfunction getLines(onLine) {\n  let buffer;\n  let position;\n  let fieldLength;\n  let discardTrailingNewline = false;\n  return function onChunk(arr) {\n    if (buffer === void 0) {\n      buffer = arr;\n      position = 0;\n      fieldLength = -1;\n    } else {\n      buffer = concat(buffer, arr);\n    }\n    const bufLength = buffer.length;\n    let lineStart = 0;\n    while (position < bufLength) {\n      if (discardTrailingNewline) {\n        if (buffer[position] === 10 /* NewLine */) {\n          lineStart = ++position;\n        }\n        discardTrailingNewline = false;\n      }\n      let lineEnd = -1;\n      for (; position < bufLength && lineEnd === -1; ++position) {\n        switch (buffer[position]) {\n          case 58 /* Colon */:\n            if (fieldLength === -1) {\n              fieldLength = position - lineStart;\n            }\n            break;\n          case 13 /* CarriageReturn */:\n            discardTrailingNewline = true;\n          case 10 /* NewLine */:\n            lineEnd = position;\n            break;\n        }\n      }\n      if (lineEnd === -1) {\n        break;\n      }\n      onLine(buffer.subarray(lineStart, lineEnd), fieldLength);\n      lineStart = position;\n      fieldLength = -1;\n    }\n    if (lineStart === bufLength) {\n      buffer = void 0;\n    } else if (lineStart !== 0) {\n      buffer = buffer.subarray(lineStart);\n      position -= lineStart;\n    }\n  };\n}\nfunction getMessages(onId, onRetry, onMessage) {\n  let message = newMessage();\n  const decoder = new TextDecoder();\n  return function onLine(line, fieldLength) {\n    if (line.length === 0) {\n      onMessage?.(message);\n      message = newMessage();\n    } else if (fieldLength > 0) {\n      const field = decoder.decode(line.subarray(0, fieldLength));\n      const valueOffset = fieldLength + (line[fieldLength + 1] === 32 /* Space */ ? 2 : 1);\n      const value = decoder.decode(line.subarray(valueOffset));\n      switch (field) {\n        case \"data\":\n          message.data = message.data ? message.data + \"\\n\" + value : value;\n          break;\n        case \"event\":\n          message.event = value;\n          break;\n        case \"id\":\n          onId(message.id = value);\n          break;\n        case \"retry\":\n          const retry = parseInt(value, 10);\n          if (!isNaN(retry)) {\n            onRetry(message.retry = retry);\n          }\n          break;\n      }\n    }\n  };\n}\nfunction concat(a, b) {\n  const res = new Uint8Array(a.length + b.length);\n  res.set(a);\n  res.set(b, a.length);\n  return res;\n}\nfunction newMessage() {\n  return {\n    data: \"\",\n    event: \"\",\n    id: \"\",\n    retry: void 0\n  };\n}\n\n// src/tasks/custom/streamingRequest.ts\nasync function* streamingRequest(args, options) {\n  const { url, info } = await makeRequestOptions({ ...args, stream: true }, options);\n  const response = await (options?.fetch ?? fetch)(url, info);\n  if (options?.retry_on_error !== false && response.status === 503 && !options?.wait_for_model) {\n    return yield* streamingRequest(args, {\n      ...options,\n      wait_for_model: true\n    });\n  }\n  if (!response.ok) {\n    if (response.headers.get(\"Content-Type\")?.startsWith(\"application/json\")) {\n      const output = await response.json();\n      if ([400, 422, 404, 500].includes(response.status) && options?.chatCompletion) {\n        throw new Error(`Server ${args.model} does not seem to support chat completion. Error: ${output.error}`);\n      }\n      if (output.error) {\n        throw new Error(output.error);\n      }\n    }\n    throw new Error(`Server response contains error: ${response.status}`);\n  }\n  if (!response.headers.get(\"content-type\")?.startsWith(\"text/event-stream\")) {\n    throw new Error(\n      `Server does not support event stream content type, it returned ` + response.headers.get(\"content-type\")\n    );\n  }\n  if (!response.body) {\n    return;\n  }\n  const reader = response.body.getReader();\n  let events = [];\n  const onEvent = (event) => {\n    events.push(event);\n  };\n  const onChunk = getLines(\n    getMessages(\n      () => {\n      },\n      () => {\n      },\n      onEvent\n    )\n  );\n  try {\n    while (true) {\n      const { done, value } = await reader.read();\n      if (done)\n        return;\n      onChunk(value);\n      for (const event of events) {\n        if (event.data.length > 0) {\n          if (event.data === \"[DONE]\") {\n            return;\n          }\n          const data = JSON.parse(event.data);\n          if (typeof data === \"object\" && data !== null && \"error\" in data) {\n            throw new Error(data.error);\n          }\n          yield data;\n        }\n      }\n      events = [];\n    }\n  } finally {\n    reader.releaseLock();\n  }\n}\n\n// src/lib/InferenceOutputError.ts\nvar InferenceOutputError = class extends TypeError {\n  constructor(message) {\n    super(\n      `Invalid inference output: ${message}. Use the 'request' method with the same parameters to do a custom call with no type checking.`\n    );\n    this.name = \"InferenceOutputError\";\n  }\n};\n\n// src/tasks/audio/audioClassification.ts\nasync function audioClassification(args, options) {\n  const res = await request(args, {\n    ...options,\n    taskHint: \"audio-classification\"\n  });\n  const isValidOutput = Array.isArray(res) && res.every((x) => typeof x.label === \"string\" && typeof x.score === \"number\");\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected Array<{label: string, score: number}>\");\n  }\n  return res;\n}\n\n// src/tasks/audio/automaticSpeechRecognition.ts\nasync function automaticSpeechRecognition(args, options) {\n  const res = await request(args, {\n    ...options,\n    taskHint: \"automatic-speech-recognition\"\n  });\n  const isValidOutput = typeof res?.text === \"string\";\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected {text: string}\");\n  }\n  return res;\n}\n\n// src/tasks/audio/textToSpeech.ts\nasync function textToSpeech(args, options) {\n  const res = await request(args, {\n    ...options,\n    taskHint: \"text-to-speech\"\n  });\n  const isValidOutput = res && res instanceof Blob;\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected Blob\");\n  }\n  return res;\n}\n\n// src/tasks/audio/audioToAudio.ts\nasync function audioToAudio(args, options) {\n  const res = await request(args, {\n    ...options,\n    taskHint: \"audio-to-audio\"\n  });\n  const isValidOutput = Array.isArray(res) && res.every(\n    (x) => typeof x.label === \"string\" && typeof x.blob === \"string\" && typeof x[\"content-type\"] === \"string\"\n  );\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected Array<{label: string, blob: string, content-type: string}>\");\n  }\n  return res;\n}\n\n// src/tasks/cv/imageClassification.ts\nasync function imageClassification(args, options) {\n  const res = await request(args, {\n    ...options,\n    taskHint: \"image-classification\"\n  });\n  const isValidOutput = Array.isArray(res) && res.every((x) => typeof x.label === \"string\" && typeof x.score === \"number\");\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected Array<{label: string, score: number}>\");\n  }\n  return res;\n}\n\n// src/tasks/cv/imageSegmentation.ts\nasync function imageSegmentation(args, options) {\n  const res = await request(args, {\n    ...options,\n    taskHint: \"image-segmentation\"\n  });\n  const isValidOutput = Array.isArray(res) && res.every((x) => typeof x.label === \"string\" && typeof x.mask === \"string\" && typeof x.score === \"number\");\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected Array<{label: string, mask: string, score: number}>\");\n  }\n  return res;\n}\n\n// src/tasks/cv/imageToText.ts\nasync function imageToText(args, options) {\n  const res = (await request(args, {\n    ...options,\n    taskHint: \"image-to-text\"\n  }))?.[0];\n  if (typeof res?.generated_text !== \"string\") {\n    throw new InferenceOutputError(\"Expected {generated_text: string}\");\n  }\n  return res;\n}\n\n// src/tasks/cv/objectDetection.ts\nasync function objectDetection(args, options) {\n  const res = await request(args, {\n    ...options,\n    taskHint: \"object-detection\"\n  });\n  const isValidOutput = Array.isArray(res) && res.every(\n    (x) => typeof x.label === \"string\" && typeof x.score === \"number\" && typeof x.box.xmin === \"number\" && typeof x.box.ymin === \"number\" && typeof x.box.xmax === \"number\" && typeof x.box.ymax === \"number\"\n  );\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\n      \"Expected Array<{label:string; score:number; box:{xmin:number; ymin:number; xmax:number; ymax:number}}>\"\n    );\n  }\n  return res;\n}\n\n// src/tasks/cv/textToImage.ts\nasync function textToImage(args, options) {\n  const res = await request(args, {\n    ...options,\n    taskHint: \"text-to-image\"\n  });\n  const isValidOutput = res && res instanceof Blob;\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected Blob\");\n  }\n  return res;\n}\n\n// src/utils/base64FromBytes.ts\nfunction base64FromBytes(arr) {\n  if (globalThis.Buffer) {\n    return globalThis.Buffer.from(arr).toString(\"base64\");\n  } else {\n    const bin = [];\n    arr.forEach((byte) => {\n      bin.push(String.fromCharCode(byte));\n    });\n    return globalThis.btoa(bin.join(\"\"));\n  }\n}\n\n// src/tasks/cv/imageToImage.ts\nasync function imageToImage(args, options) {\n  let reqArgs;\n  if (!args.parameters) {\n    reqArgs = {\n      accessToken: args.accessToken,\n      model: args.model,\n      data: args.inputs\n    };\n  } else {\n    reqArgs = {\n      ...args,\n      inputs: base64FromBytes(\n        new Uint8Array(args.inputs instanceof ArrayBuffer ? args.inputs : await args.inputs.arrayBuffer())\n      )\n    };\n  }\n  const res = await request(reqArgs, {\n    ...options,\n    taskHint: \"image-to-image\"\n  });\n  const isValidOutput = res && res instanceof Blob;\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected Blob\");\n  }\n  return res;\n}\n\n// src/tasks/cv/zeroShotImageClassification.ts\nasync function zeroShotImageClassification(args, options) {\n  const reqArgs = {\n    ...args,\n    inputs: {\n      image: base64FromBytes(\n        new Uint8Array(\n          args.inputs.image instanceof ArrayBuffer ? args.inputs.image : await args.inputs.image.arrayBuffer()\n        )\n      )\n    }\n  };\n  const res = await request(reqArgs, {\n    ...options,\n    taskHint: \"zero-shot-image-classification\"\n  });\n  const isValidOutput = Array.isArray(res) && res.every((x) => typeof x.label === \"string\" && typeof x.score === \"number\");\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected Array<{label: string, score: number}>\");\n  }\n  return res;\n}\n\n// src/tasks/nlp/featureExtraction.ts\nasync function featureExtraction(args, options) {\n  const defaultTask = args.model ? await getDefaultTask(args.model, args.accessToken, options) : void 0;\n  const res = await request(args, {\n    ...options,\n    taskHint: \"feature-extraction\",\n    ...defaultTask === \"sentence-similarity\" && { forceTask: \"feature-extraction\" }\n  });\n  let isValidOutput = true;\n  const isNumArrayRec = (arr, maxDepth, curDepth = 0) => {\n    if (curDepth > maxDepth)\n      return false;\n    if (arr.every((x) => Array.isArray(x))) {\n      return arr.every((x) => isNumArrayRec(x, maxDepth, curDepth + 1));\n    } else {\n      return arr.every((x) => typeof x === \"number\");\n    }\n  };\n  isValidOutput = Array.isArray(res) && isNumArrayRec(res, 3, 0);\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected Array<number[][][] | number[][] | number[] | number>\");\n  }\n  return res;\n}\n\n// src/tasks/nlp/fillMask.ts\nasync function fillMask(args, options) {\n  const res = await request(args, {\n    ...options,\n    taskHint: \"fill-mask\"\n  });\n  const isValidOutput = Array.isArray(res) && res.every(\n    (x) => typeof x.score === \"number\" && typeof x.sequence === \"string\" && typeof x.token === \"number\" && typeof x.token_str === \"string\"\n  );\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\n      \"Expected Array<{score: number, sequence: string, token: number, token_str: string}>\"\n    );\n  }\n  return res;\n}\n\n// src/tasks/nlp/questionAnswering.ts\nasync function questionAnswering(args, options) {\n  const res = await request(args, {\n    ...options,\n    taskHint: \"question-answering\"\n  });\n  const isValidOutput = typeof res === \"object\" && !!res && typeof res.answer === \"string\" && typeof res.end === \"number\" && typeof res.score === \"number\" && typeof res.start === \"number\";\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected {answer: string, end: number, score: number, start: number}\");\n  }\n  return res;\n}\n\n// src/tasks/nlp/sentenceSimilarity.ts\nasync function sentenceSimilarity(args, options) {\n  const defaultTask = args.model ? await getDefaultTask(args.model, args.accessToken, options) : void 0;\n  const res = await request(args, {\n    ...options,\n    taskHint: \"sentence-similarity\",\n    ...defaultTask === \"feature-extraction\" && { forceTask: \"sentence-similarity\" }\n  });\n  const isValidOutput = Array.isArray(res) && res.every((x) => typeof x === \"number\");\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected number[]\");\n  }\n  return res;\n}\n\n// src/tasks/nlp/summarization.ts\nasync function summarization(args, options) {\n  const res = await request(args, {\n    ...options,\n    taskHint: \"summarization\"\n  });\n  const isValidOutput = Array.isArray(res) && res.every((x) => typeof x?.summary_text === \"string\");\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected Array<{summary_text: string}>\");\n  }\n  return res?.[0];\n}\n\n// src/tasks/nlp/tableQuestionAnswering.ts\nasync function tableQuestionAnswering(args, options) {\n  const res = await request(args, {\n    ...options,\n    taskHint: \"table-question-answering\"\n  });\n  const isValidOutput = typeof res?.aggregator === \"string\" && typeof res.answer === \"string\" && Array.isArray(res.cells) && res.cells.every((x) => typeof x === \"string\") && Array.isArray(res.coordinates) && res.coordinates.every((coord) => Array.isArray(coord) && coord.every((x) => typeof x === \"number\"));\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\n      \"Expected {aggregator: string, answer: string, cells: string[], coordinates: number[][]}\"\n    );\n  }\n  return res;\n}\n\n// src/tasks/nlp/textClassification.ts\nasync function textClassification(args, options) {\n  const res = (await request(args, {\n    ...options,\n    taskHint: \"text-classification\"\n  }))?.[0];\n  const isValidOutput = Array.isArray(res) && res.every((x) => typeof x?.label === \"string\" && typeof x.score === \"number\");\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected Array<{label: string, score: number}>\");\n  }\n  return res;\n}\n\n// src/utils/toArray.ts\nfunction toArray(obj) {\n  if (Array.isArray(obj)) {\n    return obj;\n  }\n  return [obj];\n}\n\n// src/tasks/nlp/textGeneration.ts\nasync function textGeneration(args, options) {\n  const res = toArray(\n    await request(args, {\n      ...options,\n      taskHint: \"text-generation\"\n    })\n  );\n  const isValidOutput = Array.isArray(res) && res.every((x) => typeof x?.generated_text === \"string\");\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected Array<{generated_text: string}>\");\n  }\n  return res?.[0];\n}\n\n// src/tasks/nlp/textGenerationStream.ts\nasync function* textGenerationStream(args, options) {\n  yield* streamingRequest(args, {\n    ...options,\n    taskHint: \"text-generation\"\n  });\n}\n\n// src/tasks/nlp/tokenClassification.ts\nasync function tokenClassification(args, options) {\n  const res = toArray(\n    await request(args, {\n      ...options,\n      taskHint: \"token-classification\"\n    })\n  );\n  const isValidOutput = Array.isArray(res) && res.every(\n    (x) => typeof x.end === \"number\" && typeof x.entity_group === \"string\" && typeof x.score === \"number\" && typeof x.start === \"number\" && typeof x.word === \"string\"\n  );\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\n      \"Expected Array<{end: number, entity_group: string, score: number, start: number, word: string}>\"\n    );\n  }\n  return res;\n}\n\n// src/tasks/nlp/translation.ts\nasync function translation(args, options) {\n  const res = await request(args, {\n    ...options,\n    taskHint: \"translation\"\n  });\n  const isValidOutput = Array.isArray(res) && res.every((x) => typeof x?.translation_text === \"string\");\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected type Array<{translation_text: string}>\");\n  }\n  return res?.length === 1 ? res?.[0] : res;\n}\n\n// src/tasks/nlp/zeroShotClassification.ts\nasync function zeroShotClassification(args, options) {\n  const res = toArray(\n    await request(args, {\n      ...options,\n      taskHint: \"zero-shot-classification\"\n    })\n  );\n  const isValidOutput = Array.isArray(res) && res.every(\n    (x) => Array.isArray(x.labels) && x.labels.every((_label) => typeof _label === \"string\") && Array.isArray(x.scores) && x.scores.every((_score) => typeof _score === \"number\") && typeof x.sequence === \"string\"\n  );\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected Array<{labels: string[], scores: number[], sequence: string}>\");\n  }\n  return res;\n}\n\n// src/tasks/nlp/chatCompletion.ts\nasync function chatCompletion(args, options) {\n  const res = await request(args, {\n    ...options,\n    taskHint: \"text-generation\",\n    chatCompletion: true\n  });\n  const isValidOutput = typeof res === \"object\" && Array.isArray(res?.choices) && typeof res?.created === \"number\" && typeof res?.id === \"string\" && typeof res?.model === \"string\" && typeof res?.system_fingerprint === \"string\" && typeof res?.usage === \"object\";\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected ChatCompletionOutput\");\n  }\n  return res;\n}\n\n// src/tasks/nlp/chatCompletionStream.ts\nasync function* chatCompletionStream(args, options) {\n  yield* streamingRequest(args, {\n    ...options,\n    taskHint: \"text-generation\",\n    chatCompletion: true\n  });\n}\n\n// src/tasks/multimodal/documentQuestionAnswering.ts\nasync function documentQuestionAnswering(args, options) {\n  const reqArgs = {\n    ...args,\n    inputs: {\n      question: args.inputs.question,\n      // convert Blob or ArrayBuffer to base64\n      image: base64FromBytes(\n        new Uint8Array(\n          args.inputs.image instanceof ArrayBuffer ? args.inputs.image : await args.inputs.image.arrayBuffer()\n        )\n      )\n    }\n  };\n  const res = toArray(\n    await request(reqArgs, {\n      ...options,\n      taskHint: \"document-question-answering\"\n    })\n  )?.[0];\n  const isValidOutput = typeof res?.answer === \"string\" && (typeof res.end === \"number\" || typeof res.end === \"undefined\") && (typeof res.score === \"number\" || typeof res.score === \"undefined\") && (typeof res.start === \"number\" || typeof res.start === \"undefined\");\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected Array<{answer: string, end?: number, score?: number, start?: number}>\");\n  }\n  return res;\n}\n\n// src/tasks/multimodal/visualQuestionAnswering.ts\nasync function visualQuestionAnswering(args, options) {\n  const reqArgs = {\n    ...args,\n    inputs: {\n      question: args.inputs.question,\n      // convert Blob or ArrayBuffer to base64\n      image: base64FromBytes(\n        new Uint8Array(\n          args.inputs.image instanceof ArrayBuffer ? args.inputs.image : await args.inputs.image.arrayBuffer()\n        )\n      )\n    }\n  };\n  const res = (await request(reqArgs, {\n    ...options,\n    taskHint: \"visual-question-answering\"\n  }))?.[0];\n  const isValidOutput = typeof res?.answer === \"string\" && typeof res.score === \"number\";\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected Array<{answer: string, score: number}>\");\n  }\n  return res;\n}\n\n// src/tasks/tabular/tabularRegression.ts\nasync function tabularRegression(args, options) {\n  const res = await request(args, {\n    ...options,\n    taskHint: \"tabular-regression\"\n  });\n  const isValidOutput = Array.isArray(res) && res.every((x) => typeof x === \"number\");\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected number[]\");\n  }\n  return res;\n}\n\n// src/tasks/tabular/tabularClassification.ts\nasync function tabularClassification(args, options) {\n  const res = await request(args, {\n    ...options,\n    taskHint: \"tabular-classification\"\n  });\n  const isValidOutput = Array.isArray(res) && res.every((x) => typeof x === \"number\");\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected number[]\");\n  }\n  return res;\n}\n\n// src/HfInference.ts\nvar HfInference = class {\n  accessToken;\n  defaultOptions;\n  constructor(accessToken = \"\", defaultOptions = {}) {\n    this.accessToken = accessToken;\n    this.defaultOptions = defaultOptions;\n    for (const [name, fn] of Object.entries(tasks_exports)) {\n      Object.defineProperty(this, name, {\n        enumerable: false,\n        value: (params, options) => (\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          fn({ ...params, accessToken }, { ...defaultOptions, ...options })\n        )\n      });\n    }\n  }\n  /**\n   * Returns copy of HfInference tied to a specified endpoint.\n   */\n  endpoint(endpointUrl) {\n    return new HfInferenceEndpoint(endpointUrl, this.accessToken, this.defaultOptions);\n  }\n};\nvar HfInferenceEndpoint = class {\n  constructor(endpointUrl, accessToken = \"\", defaultOptions = {}) {\n    accessToken;\n    defaultOptions;\n    for (const [name, fn] of Object.entries(tasks_exports)) {\n      Object.defineProperty(this, name, {\n        enumerable: false,\n        value: (params, options) => (\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          fn({ ...params, accessToken, endpointUrl }, { ...defaultOptions, ...options })\n        )\n      });\n    }\n  }\n};\nexport {\n  HfInference,\n  HfInferenceEndpoint,\n  InferenceOutputError,\n  audioClassification,\n  audioToAudio,\n  automaticSpeechRecognition,\n  chatCompletion,\n  chatCompletionStream,\n  documentQuestionAnswering,\n  featureExtraction,\n  fillMask,\n  imageClassification,\n  imageSegmentation,\n  imageToImage,\n  imageToText,\n  objectDetection,\n  questionAnswering,\n  request,\n  sentenceSimilarity,\n  streamingRequest,\n  summarization,\n  tableQuestionAnswering,\n  tabularClassification,\n  tabularRegression,\n  textClassification,\n  textGeneration,\n  textGenerationStream,\n  textToImage,\n  textToSpeech,\n  tokenClassification,\n  translation,\n  visualQuestionAnswering,\n  zeroShotClassification,\n  zeroShotImageClassification\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// startup\n// Load entry module and return exports\n// This entry module used 'module' so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(94117);\n"],"names":["webpackQueues","webpackExports","webpackError","resolveQueue","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","hf_API_KEY","window","electron","HUGGINGHUB_API_KEY","client","HfInference","timer","currentLoader","currentAudioElement","document","addEventListener","Timer","LoaderEvent","CustomEvent","detail","message","autoSpeech","_x","_autoSpeech","_callee3","data","output","_context3","automaticSpeechRecognition","model","provider","console","log","chatArea","getElementById","AutoScroll","removeLoader","event","target","remove","main","_x2","_main","_callee4","fpath","_context4","classList","add","trackTime","HandleProcessingEventChanges","path","container","audioElement","loaderElement","wrapper","createElement","src","controls","innerHTML","appendChild","checked","scrollToBottom","readFileData","text","aiMessage","aiMessageUId","concat","Math","random","toString","substring","marked","addCopyListeners","debounceRenderMathJax","dispatchEvent","utilityScriptExists","t0","handleRequestError","error","errorContainer","errorArea","closeModal","retry","stopPropagation","HideErrorModal","setTimeout","ErrorMs","textContent","showError","clonedRetry","cloneNode","replaceWith","newRetry","_HideErrorModal","_callee","_context","retryHandler","_retryHandler","_callee2","_context2","removeEventListener","_step","exists","_iterator","_createForOfIteratorHelper","getElementsByTagName","includes","err","send","mediaRecorder","startTime","timerInterval","microphone","microphoneSVG","recordingModal","recordingTime","pauseButton","startButton","finishButton","cancelRecButton","audioChunks","isRecording","elapsedTime","isPaused","canSave","startRecording","_startRecording","_callee7","task","releaseMediaDevice","stream","_args7","_context7","undefined","_ref","_callee5","_context5","getTracks","track","navigator","mediaDevices","getUserMedia","audio","MediaRecorder","ondataavailable","onstop","_ref2","_callee6","audioBlob","savePath","_context6","Blob","saveRecording","_x3","start","Date","now","startTimer","pauseRecording","pause","clearInterval","finishRecording","hideModal","cancelRecording","setInterval","milliseconds","totalSeconds","seconds","minutes","hours","formattedTime","floor","pad","number","resume","__defProp","tasks_exports","omit","props","propsArr","Array","isArray","assign","map","prop","pick","filter","isUrl","modelOrUrl","test","startsWith","all","get","__export","audioClassification","audioToAudio","chatCompletion","chatCompletionStream","documentQuestionAnswering","featureExtraction","fillMask","imageClassification","imageSegmentation","imageToImage","imageToText","objectDetection","questionAnswering","request","sentenceSimilarity","streamingRequest","summarization","tableQuestionAnswering","tabularClassification","tabularRegression","textClassification","textGeneration","textGenerationStream","textToImage","textToSpeech","tokenClassification","translation","visualQuestionAnswering","zeroShotClassification","zeroShotImageClassification","taskCache","Map","CACHE_DURATION","MAX_CACHE_ITEMS","HF_HUB_URL","getDefaultTask","accessToken","options","key","cachedTask","date","delete","modelTask","fetch","headers","Authorization","resp","json","pipeline_tag","catch","set","size","HF_INFERENCE_API_BASE_URL","tasks","makeRequestOptions","args","endpointUrl","otherArgs","forceTask","includeCredentials","taskHint","wait_for_model","use_cache","dont_load_model","chatCompletion2","res","ok","taskInfo","models","id","binary","credentials","url","warn","endsWith","info","body","JSON","stringify","signal","response","retry_on_error","status","blob","reader","getReader","events","onChunk","onLine","buffer","position","fieldLength","discardTrailingNewline","arr","b","Uint8Array","bufLength","lineStart","lineEnd","subarray","getLines","decoder","TextDecoder","line","field","decode","valueOffset","parseInt","getMessages","read","parse","releaseLock","InferenceOutputError","super","this","every","x","label","score","mask","generated_text","box","xmin","ymin","xmax","ymax","base64FromBytes","globalThis","Buffer","from","bin","byte","String","fromCharCode","btoa","join","reqArgs","parameters","inputs","ArrayBuffer","arrayBuffer","image","defaultTask","isValidOutput","isNumArrayRec","maxDepth","curDepth","sequence","token","token_str","answer","end","summary_text","aggregator","cells","coordinates","coord","toArray","obj","entity_group","word","translation_text","labels","_label","scores","_score","choices","created","system_fingerprint","usage","question","defaultOptions","fn","entries","params","endpoint","HfInferenceEndpoint","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","queue","hasAwait","currentDeps","outerResolve","reject","depQueues","Set","promise","rej","deps","dep","ret","wrapDeps","getResult","fnQueue","q","has","definition"],"sourceRoot":""}