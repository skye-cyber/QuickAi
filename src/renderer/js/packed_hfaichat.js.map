{"version":3,"file":"packed_hfaichat.js","mappings":"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","sources":["webpack://QuickAi/webpack/runtime/async module","webpack://QuickAi/./src/renderer/js/hfaichat.js","webpack://QuickAi/../node_modules/@huggingface/inference/dist/index.js","webpack://QuickAi/webpack/bootstrap","webpack://QuickAi/webpack/runtime/define property getters","webpack://QuickAi/webpack/runtime/hasOwnProperty shorthand","webpack://QuickAi/webpack/startup"],"sourcesContent":["var webpackQueues = typeof Symbol === \"function\" ? Symbol(\"webpack queues\") : \"__webpack_queues__\";\nvar webpackExports = typeof Symbol === \"function\" ? Symbol(\"webpack exports\") : \"__webpack_exports__\";\nvar webpackError = typeof Symbol === \"function\" ? Symbol(\"webpack error\") : \"__webpack_error__\";\nvar resolveQueue = (queue) => {\n\tif(queue && queue.d < 1) {\n\t\tqueue.d = 1;\n\t\tqueue.forEach((fn) => (fn.r--));\n\t\tqueue.forEach((fn) => (fn.r-- ? fn.r++ : fn()));\n\t}\n}\nvar wrapDeps = (deps) => (deps.map((dep) => {\n\tif(dep !== null && typeof dep === \"object\") {\n\t\tif(dep[webpackQueues]) return dep;\n\t\tif(dep.then) {\n\t\t\tvar queue = [];\n\t\t\tqueue.d = 0;\n\t\t\tdep.then((r) => {\n\t\t\t\tobj[webpackExports] = r;\n\t\t\t\tresolveQueue(queue);\n\t\t\t}, (e) => {\n\t\t\t\tobj[webpackError] = e;\n\t\t\t\tresolveQueue(queue);\n\t\t\t});\n\t\t\tvar obj = {};\n\t\t\tobj[webpackQueues] = (fn) => (fn(queue));\n\t\t\treturn obj;\n\t\t}\n\t}\n\tvar ret = {};\n\tret[webpackQueues] = x => {};\n\tret[webpackExports] = dep;\n\treturn ret;\n}));\n__webpack_require__.a = (module, body, hasAwait) => {\n\tvar queue;\n\thasAwait && ((queue = []).d = -1);\n\tvar depQueues = new Set();\n\tvar exports = module.exports;\n\tvar currentDeps;\n\tvar outerResolve;\n\tvar reject;\n\tvar promise = new Promise((resolve, rej) => {\n\t\treject = rej;\n\t\touterResolve = resolve;\n\t});\n\tpromise[webpackExports] = exports;\n\tpromise[webpackQueues] = (fn) => (queue && fn(queue), depQueues.forEach(fn), promise[\"catch\"](x => {}));\n\tmodule.exports = promise;\n\tbody((deps) => {\n\t\tcurrentDeps = wrapDeps(deps);\n\t\tvar fn;\n\t\tvar getResult = () => (currentDeps.map((d) => {\n\t\t\tif(d[webpackError]) throw d[webpackError];\n\t\t\treturn d[webpackExports];\n\t\t}))\n\t\tvar promise = new Promise((resolve) => {\n\t\t\tfn = () => (resolve(getResult));\n\t\t\tfn.r = 0;\n\t\t\tvar fnQueue = (q) => (q !== queue && !depQueues.has(q) && (depQueues.add(q), q && !q.d && (fn.r++, q.push(fn))));\n\t\t\tcurrentDeps.map((dep) => (dep[webpackQueues](fnQueue)));\n\t\t});\n\t\treturn fn.r ? promise : getResult();\n\t}, (err) => ((err ? reject(promise[webpackError] = err) : outerResolve(exports)), resolveQueue(queue)));\n\tqueue && queue.d < 0 && (queue.d = 0);\n};","import { HfInference } from \"@huggingface/inference\";\n\nlet h_faceKey = null; // Define h_faceKey globally\n\nconst hf_API_KEY = await window.electron.HUGGINGHUB_API_KEY()\n\nconst messages = `\nKey Optimizations:\nEarly Return for Authentication Check: We immediately return None if the user is not authenticated.\nSimplified Farm Check: We return None if no farms are found for the user.\nConsistent Handling of farms: We handle both QuerySet and list cases in a more readable manner.\nReduced Redundancy: We avoid repeating the isinstance check by handling both locations and names in a single block.\nExplanation:\nAuthentication Check: The function first checks if the user is authenticated. If not, it returns None.\nFarms Filtering: It filters the FarmInformation objects for the current user.\nNo Farms Found: If no farms are found, it returns None.\nLocation or Name Selection: Depending on the locations and names parameters, it extracts either farm_location or farm_name from the farms queryset or list.\nPrint and Return: It prints the locations and returns them.\nWould you like any further optimizations or have any specific preferences?\n`\n/*\nwindow.electron.getEnv().then(env => {\n\tconst encryptedOBJ = {\n\t\tiv: env.IV,\n\t\tencryptedData: env.API_OBJ\n\t};\n\n\tconst SKEY = env.SKEY;\n\tconst keyObject = window.electron.get_key(encryptedOBJ, SKEY);\n\n\tkeyObject.then(result => {\n\t\th_faceKey = result;\n\t\tconst client = new HfInference(h_faceKey);\n\t\tinitChat(client);\n\t}).catch(error => {\n\t\tconsole.error(\"Error:\", error);\n\t});\n});\n*/\n\nconst client = new HfInference(hf_API_KEY);\n\ninitChat(client);\n\nfunction initChat(client) {\n\tconst chatArea = document.getElementById(\"chatArea\");\n\tconst userInput = document.getElementById(\"userInput\");\n\tconst sendBtn = document.getElementById(\"sendBtn\");\n\tconst modelSelect = document.getElementById('model');\n\tconst AutoScroll = document.getElementById(\"AutoScroll\");\n\tlet check = false;\n\twindow.check = check;\n\n\tasync function classifyText(text) {\n\t\tconst isImageRequest = text.startsWith(\"/image\");\n\t\tconst escapedText = window.escapeHTML(text);\n\t\tconst Currentmodel = modelSelect.value;\n\n\t\t// Display user message\n\t\tconst userMessageId = `msg_${Math.random().toString(34).substring(3, 9)}`;\n\t\tconst copyButtonId = `copy-button-${Math.random().toString(36).substring(5, 9)}`;\n\t\tconst userMessage = document.createElement(\"div\");\n\n\t\tconst VisioModels = [\n\t\t\t\"Qwen/Qwen2-VL-7B-Instruct\",\n\t\t\t\"meta-llama/Llama-3.2-11B-Vision-Instruct\",\n\t\t\t\"Qwen/QVQ-72B-Preview\"\n\t\t]\n\n\t\tconst provider = {\n\t\t\t\"Qwen/Qwen2.5-Math-1.5B\": \"hf-inference\",\n\t\t\t\"Qwen/Qwen2-VL-7B-Instruct\": \"hyperbolic\",\n\t\t\t\"Qwen/Qwen2.5-Coder-7B-Instruct\": \"nebius\",\n\t\t\t\"Qwen/QVQ-72B-Preview\": \"nebius\",\n\t\t\t\"deepseek-ai/DeepSeek-R1-Distill-Qwen-32B\": \"together\",\n\t\t\t\"deepseek-ai/DeepSeek-R1\": \"together\",\n\t\t\t\"meta-llama/Llama-3.2-11B-Vision-Instruct\": \"hf-inference\"\n\t\t}\n\n\n\t\tif (VisioModels.indexOf(Currentmodel) > -1){\n\t\t\tVisionChat(text=text, null, null, Currentmodel, provider[Currentmodel])\n\n\t\t} else {\n\t\t\t//console.log(typeof(escapedText))\n\t\t\tuserMessage.innerHTML = `\n\t\t\t<div data-id=\"${userMessageId}\" class=\"${userMessageId} relative bg-blue-500 dark:bg-[#142384] text-black dark:text-white rounded-lg p-2 md:p-3 shadow-md w-fit max-w-full lg:max-w-5xl\">\n\t\t\t<p class=\"whitespace-pre-wrap break-words max-w-xl md:max-w-2xl lg:max-w-3xl\">${(escapedText)}</p>\n\t\t\t<button id=\"${copyButtonId}\" class=\"user-copy-button absolute rounded-md px-2 py-2 right-1 bottom-0.5 bg-gradient-to-r from-indigo-400 to-pink-400 dark:from-gray-700 dark:to-gray-900 hover:bg-indigo-200 dark:hover:bg-gray-600 text-white dark:text-gray-100 rounded-lg font-semibold border border-2 cursor-pointer opacity-40 hover:opacity-80 \" onclick=\"CopyAll('.${userMessageId}', this)\">\n\t\t\tCopy\n\t\t\t</button>\n\t\t\t</div>\n\t\t\t`;\n\n\t\t\tuserMessage.classList.add(\"flex\", \"justify-end\", \"mb-4\", \"overflow-wrap\");\n\t\t\tchatArea.appendChild(userMessage);\n\t\t\twindow.implementUserCopy();\n\t\t\tchatArea.scrollTop = chatArea.scrollHeight;\n\n\t\t\tif (isImageRequest) {\n\t\t\t\tconst imageGen = new ImageGenerator(chatArea);\n\t\t\t\timageGen.createImage(text)\n\t\t\t} else {\n\t\t\t\t// Add user prompt to history\n\t\t\t\twindow.electron.addToChat({ role: \"user\", content: text });\n\n\t\t\t\t// Add Timestamp\n\t\t\t\ttext = `${text} [${window.electron.getDateTime()} UTC]`\n\n\t\t\t\tconst aiMessage = document.createElement(\"div\");\n\t\t\t\taiMessage.innerHTML = `\n\t\t\t\t<div id=\"loader-parent\">\n\t\t\t\t<svg width=\"48\" height=\"48\" viewBox=\"0 0 48 48\" xmlns=\"http://www.w3.org/2000/svg\" class=\"transform scale-75\">\n\t\t\t\t<circle cx=\"12\" cy=\"24\" r=\"4\" class=\"fill-green-500\">\n\t\t\t\t<animate attributeName=\"cy\" values=\"24;10;24;38;24\" keyTimes=\"0;0.2;0.5;0.8;1\" dur=\"1s\" repeatCount=\"indefinite\" />\n\t\t\t\t<animate attributeName=\"fill-opacity\" values=\"1;.2;1\" keyTimes=\"0;0.5;1\" dur=\"1s\" repeatCount=\"indefinite\" />\n\t\t\t\t</circle>\n\t\t\t\t<circle cx=\"24\" cy=\"24\" r=\"4\" class=\"fill-blue-500\">\n\t\t\t\t<animate attributeName=\"cy\" values=\"24;10;24;38;24\" keyTimes=\"0;0.2;0.5;0.8;1\" dur=\"1s\" repeatCount=\"indefinite\" begin=\"-0.4s\" />\n\t\t\t\t<animate attributeName=\"fill-opacity\" values=\"1;.2;1\" keyTimes=\"0;0.5;1\" dur=\"1s\" repeatCount=\"indefinite\" begin=\"-0.4s\" />\n\t\t\t\t</circle>\n\t\t\t\t<circle cx=\"36\" cy=\"24\" r=\"4\" class=\"fill-yellow-500\">\n\t\t\t\t<animate attributeName=\"cy\" values=\"24;10;24;38;24\" keyTimes=\"0;0.2;0.5;0.8;1\" dur=\"1s\" repeatCount=\"indefinite\" begin=\"-0.8s\" />\n\t\t\t\t<animate attributeName=\"fill-opacity\" values=\"1;.2;1\" keyTimes=\"0;0.5;1\" dur=\"1s\" repeatCount=\"indefinite\" begin=\"-0.8s\" />\n\t\t\t\t</circle>\n\t\t\t\t</svg>\n\t\t\t\t</div>\n\t\t\t\t`;\n\n\t\t\t\tconst aiMessageUId = `msg_${Math.random().toString(30).substring(3,9)}`;\n\t\t\t\taiMessage.classList.add(\"flex\", \"justify-start\", \"mb-12\", \"overflow-wrap\");\n\t\t\t\tchatArea.appendChild(aiMessage);\n\t\t\t\tAutoScroll.checked ? scrollToBottom(chatArea) : null;\n\t\t\t\tconst foldId = `think-content-${Math.random().toString(33).substring(3, 9)}`;\n\n\t\t\t\t//console.log(JSON.stringify(window.electron.getChat()), null, 4);\n\n\t\t\t\tconst _Timer = new window.Timer;\n\t\t\t\ttry {\n\t\t\t\t\t//console.log(typeof(window.electron.getChat()))\n\t\t\t\t\tconst options = {\n\t\t\t\t\t\tmodel: Currentmodel,\n\t\t\t\t\t\tmessages: window.electron.getChat(), // Add conversation in JSON format to avoid size limitation\n\t\t\t\t\t\tmax_tokens: 3000\n\t\t\t\t\t};\n\n\t\t\t\t\tif (provider[Currentmodel]) {\n\t\t\t\t\t\toptions.provider = provider[Currentmodel];\n\t\t\t\t\t}\n\n\t\t\t\t\tconst stream = client.chatCompletionStream(options);\n\n\t\t\t\t\tlet output = \"\";\n\n\t\t\t\t\t// change send button appearance to processing status\n\t\t\t\t\twindow.HandleProcessingEventChanges('show')\n\n\t\t\t\t\t//start timer\n\t\t\t\t\t_Timer.trackTime(\"start\");\n\n\t\t\t\t\tlet thinkContent = \"\";\n\t\t\t\t\tlet actualResponse = \"\";\n\t\t\t\t\tlet isThinking = false;\n\t\t\t\t\tlet fullResponse = \"\";\n\t\t\t\t\t// This will prevent re-evaluation of the thinking start loop once thinking is done since isThinking will be reset to false making the loop elligible for possible re-evaluation\n\t\t\t\t\tlet hasfinishedThinking = false;\n\t\t\t\t\tfor await (const chunk of stream) {\n\t\t\t\t\t\tconst choice = chunk?.choices?.[0];\n\t\t\t\t\t\tif (choice?.delta?.content) {\n\t\t\t\t\t\t\tconst deltaContent = choice.delta.content;\n\t\t\t\t\t\t\toutput += deltaContent;\n\t\t\t\t\t\t\tfullResponse += deltaContent\n\n\t\t\t\t\t\t\t//_eval determines start of the thinking content marked ither by <think> tag or model being deepseek where <think> is unintentionslly ommited.\n\t\t\t\t\t\t\tconst _eval = (!isThinking && (output.indexOf(\"<think>\") !== -1 || Currentmodel === \"deepseek-ai/DeepSeek-R1-Distill-Qwen-32B\")) ? true : false\n\t\t\t\t\t\t\tconst _closeEval = (isThinking && (output.indexOf(\"</think>\") !== -1)) ? true : false\n\n\t\t\t\t\t\t\tif (_eval && !hasfinishedThinking) {\n\t\t\t\t\t\t\t\t//console.log(\"Thinking...\")\n\t\t\t\t\t\t\t\tisThinking = true;\n\t\t\t\t\t\t\t\toutput = output.replace(\"<think>\", \"\"); // Remove <think> from output\n\t\t\t\t\t\t\t\t// Avoid redundancy as at this point bothe output and think are empty hence taking same value on thinking start\n\t\t\t\t\t\t\t\tthinkContent = output //deltaContent.replace(\"<think>\", \"\");\n\t\t\t\t\t\t\t} else if (_closeEval) {\n\t\t\t\t\t\t\t\t//console.log(\"Finished Thinking.\")\n\t\t\t\t\t\t\t\tisThinking = false;\n\t\t\t\t\t\t\t\thasfinishedThinking = true;\n\t\t\t\t\t\t\t\tthinkContent += deltaContent.replace(\"</think>\", \"\");\n\t\t\t\t\t\t\t\toutput = output.replace(\"</think>\", \"\"); // Remove </think> from output\n\t\t\t\t\t\t\t} else if (isThinking) {\n\t\t\t\t\t\t\t\tthinkContent += deltaContent;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t//console.log(\"Final Res loop\")\n\t\t\t\t\t\t\t\tactualResponse += deltaContent;\n\t\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\t\t// Update innerHTML with marked output\n\t\t\t\t\t\t\taiMessage.innerHTML = `\n\t\t\t\t\t\t\t<section class=\"relative w-fit max-w-full lg:max-w-6xl mb-8 p-2\">\n\t\t\t\t\t\t\t${isThinking || thinkContent ? `\n\t\t\t\t\t\t\t\t<div class=\"think-section bg-gray-200 text-gray-800 dark:bg-[#28185a] dark:text-white rounded-lg px-4 pt-2 lg:max-w-6xl\">\n\t\t\t\t\t\t\t\t<div class=\"flex items-center justify-between\">\n\t\t\t\t\t\t\t\t<strong style=\"color: #007bff;\">Thoughts:</strong>\n\t\t\t\t\t\t\t\t<button class=\"text-sm text-gray-600 dark:text-gray-300\" onclick=\"window.toggleFold(event, this.parentElement.nextElementSibling.id)\">\n\t\t\t\t\t\t\t\t<p class=\"flex\">Fold\n\t\t\t\t\t\t\t\t<svg class=\"mb-2\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" width=\"32\" height=\"38\" class=\"fold-icon\">\n\t\t\t\t\t\t\t\t<path class=\"fill-blue-400 dark:fill-yellow-400\" d=\"M6 9h12l-6 6z\"/>\n\t\t\t\t\t\t\t\t<path fill=\"currentColor\" d=\"M6 15h12l-6-6z\"/>\n\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div id=\"${foldId}\" class=\"\">\n\t\t\t\t\t\t\t\t<p style=\"color: #333;\">${marked(thinkContent)}</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t` : ''}\n\t\t\t\t\t\t\t\t${thinkContent && actualResponse ? `<p class=\"rounded-lg border-2 border-blue-400 dark:border-orange-400\"></p>`: \"\"}\n\t\t\t\t\t\t\t\t${actualResponse ? `\n\t\t\t\t\t\t\t\t\t<div class=\"${aiMessageUId} bg-gray-200 py-4 text-gray-800 dark:bg-[#28185a] dark:text-white rounded-lg px-4 mb-6 pb-4\">\n\t\t\t\t\t\t\t\t\t${actualResponse && thinkContent ? `<strong style=\"color: #28a745;\">Response:</strong>` : ''}\n\t\t\t\t\t\t\t\t\t<p style=\"color: #333;\">${marked(actualResponse)}</p>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<section class=\"options flex absolute bottom-2 left-0 space-x-4 cursor-pointer\">\n\t\t\t\t\t\t\t\t\t<div class=\"p-1 border-none\" id=\"exportButton\" onclick=\"toggleExportOptions(this);\" title=\"Export\">\n\t\t\t\t\t\t\t\t\t<svg class=\"fill-black dark:fill-gray-700 text-gray-600 bg-[#5555ff] dark:bg-white w-6 h-6 rounded-full\" viewBox=\"0 0 24 24\">\n\t\t\t\t\t\t\t\t\t<path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"/>\n\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class=\"rounded-lg p-1 cursor-pointer\" aria-label=\"Copy\" title=\"Copy\" id=\"copy-all\" onclick=\"CopyAll('.${aiMessageUId}');\">\n\t\t\t\t\t\t\t\t\t<svg class=\"w-5 md:w-6 h-5 md:h-6\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t\t\t\t\t<path class=\"fill-black dark:fill-pink-300\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z\"/></path>\n\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t\t\t\t<div id=\"exportOptions\" class=\"hidden block absolute bottom-10 left-0 bg-white dark:bg-gray-800 p-2 rounded shadow-md z-50 transition-300\">\n\t\t\t\t\t\t\t\t\t<ul class=\"list-none p-0\">\n\t\t\t\t\t\t\t\t\t<li class=\"mb-2\">\n\t\t\t\t\t\t\t\t\t<a href=\"\" class=\"text-blue-500 dark:text-blue-400\" onclick=\"HTML2Pdf(event, '.${aiMessageUId}')\">Export to PDF</a>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t<li class=\"mb-2\">\n\t\t\t\t\t\t\t\t\t<a href=\"\" class=\"text-blue-500 dark:text-blue-400\" onclick=\"HTML2Jpg(event, '.${aiMessageUId}')\">Export to JPG</a>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<a href=\"\" class=\"text-blue-500 dark:text-blue-400\" onclick=\"HTML2Word(event, '.${aiMessageUId}')\">Export to DOCX</a>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<a href=\"\" class=\"cursor-not-allowed text-blue-500 dark:text-blue-400 decoration-underline\" onclick=\"SuperHTML2Word(event, '.${aiMessageUId}')\">Word Export Advance</a>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</section>`:\"\"}\n\t\t\t\t\t\t\t\t\t`;\n\n\n\t\t\t\t\t\t\t\t\tAutoScroll.checked ? scrollToBottom(chatArea) : null;\n\t\t\t\t\t\t\t\t\twindow.addCopyListeners();\n\t\t\t\t\t\t\t\t\t// Debounce MathJax rendering to avoid freezing\n\t\t\t\t\t\t\t\t\twindow.debounceRenderMathJax(aiMessageUId);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t//stop timer\n\t\t\t\t\t_Timer.trackTime(\"stop\");\n\n\t\t\t\t\t// Resent send button appearance\n\t\t\t\t\twindow.HandleProcessingEventChanges('hide')\n\n\t\t\t\t\tif (check === false) {\n\t\t\t\t\t\t// Sending a message to the main process\n\t\t\t\t\t\twindow.electron.send('toMain', { message: 'set-Utitility-Script' });\n\t\t\t\t\t\tcheck = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Render mathjax immediately\n\t\t\t\t\twindow.debounceRenderMathJax(aiMessageUId, 0, true);\n\t\t\t\t\t// Store conversation history\n\t\t\t\t\twindow.electron.addToChat({ role: \"assistant\", content: fullResponse });\n\n\t\t\t\t} catch (error) {\n\t\t\t\t\twindow.handleRequestError(error, userMessage, aiMessage);\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\t// Listen for the imageLoaded event\n\tdocument.addEventListener('imageLoaded', function(event) {\n\t\tconst fileDataUrl = event.detail.fileDataUrl;\n\t\tconst text = event.detail.text;\n\t\tconst fileType = event.detail.fileType\n\t\tVisionChat(text, fileType, fileDataUrl);\n\t});\n\n\n\tasync function VisionChat(text, fileType, fileDataUrl = null, Vmodel = null,  provider = null) {\n\t\tconst _Timer = new window.Timer;\n\n\t\t//switch to vision model\n\t\tmodelSelect.value = Vmodel ? Vmodel.split('/').slice(-1)[0] : \"meta-llama/Llama-3.2-11B-Vision-Instruct\";\n\n\t\tconst fileContainerId = `FCont_${Math.random().toString(35).substring(2, 8)}`;\n\t\t// Add user message to chat\n\t\tconst userMessage = addUserMessage(text, fileType, fileDataUrl, fileContainerId);\n\n\t\t//Add Timestamp\n\t\ttext = `${text} [${window.electron.getDateTime()} UTC]`\n\t\t//console.log(text)\n\t\t// Determine the content based on fileDataUrl\n\t\tlet userContent;\n\t\tif (fileDataUrl) {\n\t\t\t//console.log(\"Image url present\");\n\t\t\tif (fileType == \"image\") {\n\t\t\t\tconst imageContent = fileDataUrl.map(_url => ({\n\t\t\t\t\ttype: \"image_url\",\n\t\t\t\t\timage_url: {\n\t\t\t\t\t\turl: _url,\n\t\t\t\t\t}\n\t\t\t\t}));\n\n\t\t\t\tuserContent = [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: \"text\",\n\t\t\t\t\t\ttext: text,\n\t\t\t\t\t},\n\t\t\t\t\t...imageContent // Spread the image content objects\n\t\t\t\t];\n\t\t\t}\n\n\t\t\telse if (fileType == \"document\") {\n\t\t\t\tconst documentContent = fileDataUrl.map(_url => ({\n\t\t\t\t\ttype: \"file_url\",\n\t\t\t\t\timage_url: {\n\t\t\t\t\t\turl: _url,\n\t\t\t\t\t}\n\t\t\t\t}));\n\n\t\t\t\tuserContent = [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: \"text\",\n\t\t\t\t\t\ttext: text,\n\t\t\t\t\t},\n\t\t\t\t\t... documentContent // Spread the document content objects\n\t\t\t\t];\n\t\t\t}\n\t\t} else {\n\t\t\t//console.log(\"Url not found\");\n\t\t\tuserContent = [\n\t\t\t\t{\n\t\t\t\t\ttype: \"text\",\n\t\t\t\t\ttext: text,\n\t\t\t\t},\n\t\t\t];\n\t\t}\n\n\t\t// Add user message to VisionHistory\n\t\twindow.electron.addToVisionChat({\n\t\t\trole: \"user\",\n\t\t\tcontent: userContent,\n\t\t});\n\n\t\tconst VisionMessage = document.createElement(\"div\");\n\t\tconst VisionMessageUId = `msg_${Math.random().toString(30).substring(3, 9)}`;\n\t\tVisionMessage.classList.add(\"flex\", \"justify-start\", \"mb-12\", \"overflow-wrap\");\n\t\tchatArea.appendChild(VisionMessage);\n\n\t\t// Add loading animation\n\t\tVisionMessage.innerHTML = `\n\t\t<div id=\"loader-parent\">\n\t\t<svg width=\"48\" height=\"48\" viewBox=\"0 0 48 48\" xmlns=\"http://www.w3.org/2000/svg\" class=\"transform scale-75\">\n\t\t<circle cx=\"12\" cy=\"24\" r=\"4\" class=\"fill-green-500\">\n\t\t<animate attributeName=\"cy\" values=\"24;10;24;38;24\" keyTimes=\"0;0.2;0.5;0.8;1\" dur=\"1s\" repeatCount=\"indefinite\" />\n\t\t<animate attributeName=\"fill-opacity\" values=\"1;.2;1\" keyTimes=\"0;0.5;1\" dur=\"1s\" repeatCount=\"indefinite\" />\n\t\t</circle>\n\t\t<circle cx=\"24\" cy=\"24\" r=\"4\" class=\"fill-blue-500\">\n\t\t<animate attributeName=\"cy\" values=\"24;10;24;38;24\" keyTimes=\"0;0.2;0.5;0.8;1\" dur=\"1s\" repeatCount=\"indefinite\" begin=\"-0.4s\" />\n\t\t<animate attributeName=\"fill-opacity\" values=\"1;.2;1\" keyTimes=\"0;0.5;1\" dur=\"1s\" repeatCount=\"indefinite\" begin=\"-0.4s\" />\n\t\t</circle>\n\t\t<circle cx=\"36\" cy=\"24\" r=\"4\" class=\"fill-yellow-500\">\n\t\t<animate attributeName=\"cy\" values=\"24;10;24;38;24\" keyTimes=\"0;0.2;0.5;0.8;1\" dur=\"1s\" repeatCount=\"indefinite\" begin=\"-0.8s\" />\n\t\t<animate attributeName=\"fill-opacity\" values=\"1;.2;1\" keyTimes=\"0;0.5;1\" dur=\"1s\" repeatCount=\"indefinite\" begin=\"-0.8s\" />\n\t\t</circle>\n\t\t</svg>\n\t\t</div>\n\t\t`;\n\n\t\ttry {\n\t\t\tconsole.log(window.electron.clearImages(window.electron.getVisionChat()),)\n\t\t\tconst visionstream = client.chatCompletionStream({\n\t\t\t\tmodel: Vmodel,\n\t\t\t\tmessages: window.electron.clearImages(window.electron.getVisionChat()),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t max_tokens: 2000,\n\t\t\t});\n\n\t\t\tif (provider) {\n\t\t\t\tvisionstream.provider = provider;\n\t\t\t}\n\n\t\t\tlet visionMs = \"\";\n\n\t\t\t// change send button appearance to processing status\n\t\t\twindow.HandleProcessingEventChanges('show')\n\n\t\t\t//start timer\n\t\t\t_Timer.trackTime(\"start\");\n\t\t\tfor await (const chunk of visionstream) {\n\t\t\t\tconst choice = chunk?.choices?.[0];\n\t\t\t\tif (choice?.delta?.content) {\n\t\t\t\t\tvisionMs += choice.delta.content;\n\t\t\t\t\tVisionMessage.innerHTML = `\n\t\t\t\t\t<section class=\"relative w-fit max-w-full lg:max-w-6xl mb-8\">\n\t\t\t\t\t<div class=\"${VisionMessageUId} bg-gray-200 text-gray-800 dark:bg-[#28185a] dark:text-white rounded-lg px-4 mb-6 pt-2 pb-4 w-fit max-w-full lg:max-w-6xl\">${marked(visionMs)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<section class=\"options flex absolute bottom-2 left-0 space-x-4 cursor-pointer\">\n\t\t\t\t\t<div class=\"p-1 border-none\" id=\"exportButton\" onclick=\"toggleExportOptions(this);\" title=\"Export\">\n\t\t\t\t\t<svg class=\"fill-black dark:fill-gray-700 text-gray-600 bg-[#5555ff] dark:bg-white w-6 h-6 rounded-full\" viewBox=\"0 0 24 24\">\n\t\t\t\t\t<path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"/>\n\t\t\t\t\t</svg>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"rounded-lg p-1 cursor-pointer\" aria-label=\"Copy\" title=\"Copy\" id=\"copy-all\" onclick=\"CopyAll('.${VisionMessageUId}');\">\n\t\t\t\t\t<svg class=\"w-5 md:w-6 h-5 md:h-6\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t<path class=\"fill-black dark:fill-pink-300\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z\"></path>\n\t\t\t\t\t</svg>\n\t\t\t\t\t</div>\n\t\t\t\t\t</section>\n\n\t\t\t\t\t<div id=\"exportOptions\" class=\"hidden block absolute bottom-10 left-0 bg-white dark:bg-gray-800 p-2 rounded shadow-md z-50 transition-300\">\n\n\t\t\t\t\t<ul class=\"list-none p-0\">\n\t\t\t\t\t<li class=\"mb-2\">\n\t\t\t\t\t<a href=\"\" class=\"text-blue-500 dark:text-blue-400\" onclick=\"HTML2Pdf(event, '.${VisionMessageUId}')\">1. Export to PDF</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li class=\"mb-2\">\n\t\t\t\t\t<a href=\"\" class=\"text-blue-500 dark:text-blue-400\" onclick=\"HTML2Jpg(event, '.${VisionMessageUId}')\">2. Export to JPG</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t<a href=\"\" class=\"text-blue-500 dark:text-blue-400\" onclick=\"HTML2Word(event, '.${VisionMessageUId}')\">3. Export to DOCX</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t<a href=\"\" class=\"text-blue-500 dark:text-blue-400 decoration-underline\" onclick=\"SuperHTML2Word(event, '.${VisionMessageUId}')\">4. Word Export Advance</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t\t</section>\n\t\t\t\t\t`;\n\n\t\t\t\t\tAutoScroll.checked ? scrollToBottom(chatArea) : null;\n\t\t\t\t\twindow.addCopyListeners();\n\t\t\t\t\t// Debounce MathJax rendering to avoid freezing\n\t\t\t\t\twindow.debounceRenderMathJax(VisionMessageUId);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//stop timer\n\t\t\t_Timer.trackTime(\"stop\");\n\n\t\t\t// Reset send button appearance\n\t\t\twindow.HandleProcessingEventChanges('hide')\n\n\t\t\tif (check === false) {\n\t\t\t\twindow.electron.send('ready_4_utility');\n\t\t\t\tcheck = true;\n\t\t\t}\n\t\t\t// Render mathjax immediately\n\t\t\twindow.debounceRenderMathJax(VisionMessageUId, 0, true);\n\t\t\twindow.electron.addToVisionChat({ role: \"assistant\", content: [{ type: \"text\", text: visionMs }] });\n\t\t\t//console.log(\"Final VisionHistory:\", JSON.stringify(VisionHistory, null, 2));\n\n\t\t} catch (error) {\n\t\t\twindow.handleRequestError(error, userMessage, VisionMessage, [\"VS\", fileType, fileContainerId])\n\t\t}\n\t}\n\n\tfunction addUserMessage(text, fileType, fileDataUrl, fileContainerId) {\n\t\tconst VisionUserMessageUId = `msg_${Math.random().toString(35).substring(2, 8)}`;\n\t\tconst VisioncopyButtonId = `copy-button-${Math.random().toString(36).substring(5, 9)}`;\n\t\tconst userMessage = document.createElement(\"div\");\n\t\tuserMessage.classList.add(\"flex\", \"justify-end\", \"mb-4\");\n\t\tconst messageHtml = `\n\t\t<div data-id=\"${VisionUserMessageUId}\" class=\"${VisionUserMessageUId} relative bg-blue-500 dark:bg-[#142384] text-black dark:text-white rounded-lg p-2 md:p-3 shadow-md w-fit max-w-full lg:max-w-5xl\">\n\t\t<p class=\"whitespace-pre-wrap break-words max-w-xl md:max-w-2xl lg:max-w-3xl\">${window.escapeHTML(text)}</p>\n\t\t<button id=\"${VisioncopyButtonId}\" class=\"user-copy-button absolute rounded-md px-2 py-2 right-1 bottom-0.5 bg-gradient-to-r from-indigo-400 to-pink-400 dark:from-gray-700 dark:to-gray-900 hover:bg-indigo-200 dark:hover:bg-gray-600 text-white dark:text-gray-100 rounded-lg font-semibold border border-2 cursor-pointer opacity-40 hover:opacity-80\" onclick=\"CopyAll('.${VisionUserMessageUId}', this)\">\n\t\tCopy\n\t\t</button>\n\t\t</div>\n\t\t`;\n\n\t\t// Create files container if they exist\n\t\tif (fileDataUrl){\n\t\t\tconst fileHtml = `\n\t\t\t<div id=\"${fileContainerId}\" class=\"flex justify-end\">\n\t\t\t<article class=\"flex flex-rows-1 md:flex-rows-3 bg-cyan-100 w-fit p-1 rounded-lg\">\n\t\t\t${fileDataUrl && fileType === \"image\" ? fileDataUrl.map(url => `<img src=\"${url}\" alt=\"Uploaded Image\" class=\"rounded-md w-14 h-14 my-auto mx-1\" />`).join('') : fileType === \"document\" ? fileDataUrl.map(url => `<div class=\"inline-flex items-center\"><svg class=\"w-6 h-6 mr-2\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t<path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2zm0 16V4a2 2 0 0 1 2 2v12a2 2 0 0 0-2-2zm1-1h4v10h-4V4z\"/></svg><span>${url}</span></div>`).join('') : \"\"}\n\t\t\t</article>\n\t\t\t</div>\n\t\t\t`;\n\t\t\tconst filesContainer = document.createElement(\"div\");\n\t\t\tfilesContainer.className = \"flex justify-end\";\n\t\t\tfilesContainer.innerHTML = fileHtml;\n\t\t\tchatArea.appendChild(filesContainer);\n\t\t}\n\t\t// Append the user text to the page\n\t\tuserMessage.innerHTML = messageHtml;\n\t\tchatArea.appendChild(userMessage);\n\t\tscrollToBottom(chatArea)\n\t\twindow.copyBMan();\n\t\twindow.implementUserCopy();\n\t\treturn userMessage\n\t}\n\n\tsendBtn.addEventListener(\"click\", () => {\n\t\tconst inputText = userInput.textContent.trim();\n\t\tif (inputText) {\n\t\t\t//Reset the input field content\n\t\t\tuserInput.textContent = \"\";\n\t\t\t// Reset th input field size/height\n\t\t\tuserInput.style.height = 'auto';\n\t\t\tuserInput.style.height = Math.min(userInput.scrollHeight, 28 * window.innerHeight / 100) + 'px';\n\t\t\tuserInput.scrollTop = userInput.scrollHeight;\n\t\t\tclassifyText(inputText);\n\t\t\tdocument.getElementById('suggestions').classList.add('hidden')\n\t\t}\n\t});\n\n\n\tuserInput.addEventListener(\"keydown\", (e) => {\n\t\tif (!sendBtn.classList.contains('hidden') === true && e.key === \"Enter\" && !e.shiftKey) {\n\t\t\te.preventDefault();\n\t\t\tconst inputText = userInput.textContent.trim();\n\n\t\t\tif (inputText) {\n\t\t\t\t//Reset the input field content\n\t\t\t\tuserInput.textContent = \"\";\n\t\t\t\t// Reset th input field size/height\n\t\t\t\tuserInput.style.height = 'auto';\n\t\t\t\tuserInput.style.height = Math.min(userInput.scrollHeight, 28 * window.innerHeight / 100) + 'px';\n\t\t\t\tuserInput.scrollTop = userInput.scrollHeight;\n\t\t\t\tclassifyText(inputText);\n\t\t\t\tdocument.getElementById('suggestions') ? document.getElementById('suggestions').classList.add('hidden') : \"\";\n\t\t\t}\n\t\t}\n\t});\n\n}\n\n\nclass ImageGenerator {\n\tconstructor(chatArea) {\n\t\tthis.chatArea = chatArea;\n\t}\n\n\tasync generateImage(data, useFlux = false) {\n\t\tconst url = useFlux\n\t\t? \"https://api-inference.huggingface.co/models/black-forest-labs/FLUX.1-dev\"\n\t\t: \"https://api-inference.huggingface.co/models/stabilityai/stable-diffusion-3.5-large\";\n\n\t\ttry {\n\t\t\tconst response = await fetch(url, {\n\t\t\t\theaders: {\n\t\t\t\t\tAuthorization: `Bearer ${h_faceKey}`,\n\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t},\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tbody: JSON.stringify(data),\n\t\t\t});\n\t\t\tconst blob = await response.blob();\n\t\t\treturn URL.createObjectURL(blob);\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Image generation error:\", error);\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tcreateLoadingMessage(imageId) {\n\t\tconst loadingMessage = document.createElement(\"div\");\n\t\tloadingMessage.innerHTML = `\n\t\t<div id=\"${imageId}\" class=\"w-fit dark:text-gray-100 rounded-lg font-normal bg-gray-50 dark:bg-zinc-900 max-w-3xl mb-[7%] lg:mb-[5%]\">\n\t\t<div class=\"space-x-1 flex\">\n\t\t<svg width=\"48\" height=\"48\" viewBox=\"0 0 48 48\" xmlns=\"http://www.w3.org/2000/svg\" class=\"transform scale-75\">\n\t\t<circle cx=\"12\" cy=\"24\" r=\"4\" class=\"fill-green-500\">\n\t\t<animate attributeName=\"cy\" values=\"24;10;24;38;24\" keyTimes=\"0;0.2;0.5;0.8;1\" dur=\"1s\" repeatCount=\"indefinite\" />\n\t\t<animate attributeName=\"fill-opacity\" values=\"1;.2;1\" keyTimes=\"0;0.5;1\" dur=\"1s\" repeatCount=\"indefinite\" />\n\t\t</circle>\n\t\t<circle cx=\"24\" cy=\"24\" r=\"4\" class=\"fill-blue-500\">\n\t\t<animate attributeName=\"cy\" values=\"24;10;24;38;24\" keyTimes=\"0;0.2;0.5;0.8;1\" dur=\"1s\" repeatCount=\"indefinite\" begin=\"-0.4s\" />\n\t\t<animate attributeName=\"fill-opacity\" values=\"1;.2;1\" keyTimes=\"0;0.5;1\" dur=\"1s\" repeatCount=\"indefinite\" begin=\"-0.4s\" />\n\t\t</circle>\n\t\t<circle cx=\"36\" cy=\"24\" r=\"4\" class=\"fill-yellow-500\">\n\t\t<animate attributeName=\"cy\" values=\"24;10;24;38;24\" keyTimes=\"0;0.2;0.5;0.8;1\" dur=\"1s\" repeatCount=\"indefinite\" begin=\"-0.8s\" />\n\t\t<animate attributeName=\"fill-opacity\" values=\"1;.2;1\" keyTimes=\"0;0.5;1\" dur=\"1s\" repeatCount=\"indefinite\" begin=\"-0.8s\" />\n\t\t</circle>\n\t\t</svg>\n\t\t<span class=\"text-sm mt-3 text-gray-700 dark:text-gray-200\">0s</span>\n\t\t</div>\n\t\t</div>`;\n\t\tthis.chatArea.appendChild(loadingMessage);\n\t\tthis.chatArea.scrollTop = this.chatArea.scrollHeight;\n\t\treturn loadingMessage;\n\t}\n\n\tasync createImage(text) {\n\t\tconst imageData = { inputs: text.replace(\"/image\", \"\").trim() };\n\t\tconst imageId = `image_${Math.random().toString(36).substring(2, 7)}`;\n\t\tconst loadingMessage = this.createLoadingMessage(imageId);\n\t\tlet secondsElapsed = 0;\n\t\tconst timerInterval = setInterval(() => {\n\t\t\tsecondsElapsed++;\n\t\t\tloadingMessage.querySelector('span').textContent = `${secondsElapsed}s`;\n\t\t}, 1000);\n\n\t\tconst useFlux = document.getElementById('CModel').checked;\n\t\tconst imageUrl = await this.generateImage(imageData, useFlux);\n\t\tclearInterval(timerInterval);\n\n\t\tif (imageUrl) {\n\t\t\tloadingMessage.innerHTML = this.createImageElement(imageUrl);\n\t\t} else {\n\t\t\tloadingMessage.innerHTML = `\n\t\t\t<div id=\"${imageId}\" class=\"w-fit bg-red-400 text-gray-950 dark:bg-rose-500 rounded-lg p-2 font-normal shadow-lg dark:shadow-red-500 max-w-3xl mb-[5%]\">\n\t\t\t<span class=\"text-sm text-gray-950 dark:text-black\">Could not Process request!⚠️</span>\n\t\t\t</div>`;\n\t\t}\n\t}\n\n\tcreateImageElement(imageUrl) {\n\t\treturn `\n\t\t<div class=\"relative mb-[5%]\">\n\t\t<img src=\"${imageUrl}\" class=\"rounded-lg shadow-lg mt-4 max-w-xs cursor-pointer\" onclick=\"this.requestFullscreen()\"/>\n\t\t<button class=\"absolute flex items-center text-white rounded-bl-md bg-gradient-to-r from-blue-500 to-purple-500 hover:from-blue-600 hover:to-purple-600 font-semibold py-2 px-4 focus:outline-none shadow-md w-fit h-fit bottom-0 left-0 opacity-60 hover:opacity-100\">\n\t\t<a href=\"${imageUrl}\" download=\"generated_image.png\" class=\"flex items-center text-white no-underline\">\n\t\t<span>Download</span>\n\t\t<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" class=\"ml-2\">\n\t\t<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12 21C11.7348 21 11.4804 20.8946 11.2929 20.7071L4.29289 13.7071C3.90237 13.3166 3.90237 12.6834 4.29289 12.2929C4.68342 11.9024 5.31658 11.9024 5.70711 12.2929L11 17.5858V4C11 3.44772 11.4477 3 12 3C12.5523 3 13 3.44772 13 4V17.5858L18.2929 12.2929C18.6834 11.9024 19.3166 11.9024 19.7071 12.2929C20.0976 12.6834 20.0976 13.3166 19.7071 13.7071L12.7071 20.7071C12.5196 20.8946 12.2652 21 12 21Z\" fill=\"currentColor\"></path>\n\t\t</svg>\n\t\t</a>\n\t\t</button>\n\t\t</div>`;\n\t}\n}\n\n\n","var __defProp = Object.defineProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\n\n// src/tasks/index.ts\nvar tasks_exports = {};\n__export(tasks_exports, {\n  audioClassification: () => audioClassification,\n  audioToAudio: () => audioToAudio,\n  automaticSpeechRecognition: () => automaticSpeechRecognition,\n  chatCompletion: () => chatCompletion,\n  chatCompletionStream: () => chatCompletionStream,\n  documentQuestionAnswering: () => documentQuestionAnswering,\n  featureExtraction: () => featureExtraction,\n  fillMask: () => fillMask,\n  imageClassification: () => imageClassification,\n  imageSegmentation: () => imageSegmentation,\n  imageToImage: () => imageToImage,\n  imageToText: () => imageToText,\n  objectDetection: () => objectDetection,\n  questionAnswering: () => questionAnswering,\n  request: () => request,\n  sentenceSimilarity: () => sentenceSimilarity,\n  streamingRequest: () => streamingRequest,\n  summarization: () => summarization,\n  tableQuestionAnswering: () => tableQuestionAnswering,\n  tabularClassification: () => tabularClassification,\n  tabularRegression: () => tabularRegression,\n  textClassification: () => textClassification,\n  textGeneration: () => textGeneration,\n  textGenerationStream: () => textGenerationStream,\n  textToImage: () => textToImage,\n  textToSpeech: () => textToSpeech,\n  tokenClassification: () => tokenClassification,\n  translation: () => translation,\n  visualQuestionAnswering: () => visualQuestionAnswering,\n  zeroShotClassification: () => zeroShotClassification,\n  zeroShotImageClassification: () => zeroShotImageClassification\n});\n\n// src/utils/pick.ts\nfunction pick(o, props) {\n  return Object.assign(\n    {},\n    ...props.map((prop) => {\n      if (o[prop] !== void 0) {\n        return { [prop]: o[prop] };\n      }\n    })\n  );\n}\n\n// src/utils/typedInclude.ts\nfunction typedInclude(arr, v) {\n  return arr.includes(v);\n}\n\n// src/utils/omit.ts\nfunction omit(o, props) {\n  const propsArr = Array.isArray(props) ? props : [props];\n  const letsKeep = Object.keys(o).filter((prop) => !typedInclude(propsArr, prop));\n  return pick(o, letsKeep);\n}\n\n// src/lib/isUrl.ts\nfunction isUrl(modelOrUrl) {\n  return /^http(s?):/.test(modelOrUrl) || modelOrUrl.startsWith(\"/\");\n}\n\n// src/lib/getDefaultTask.ts\nvar taskCache = /* @__PURE__ */ new Map();\nvar CACHE_DURATION = 10 * 60 * 1e3;\nvar MAX_CACHE_ITEMS = 1e3;\nvar HF_HUB_URL = \"https://huggingface.co\";\nasync function getDefaultTask(model, accessToken, options) {\n  if (isUrl(model)) {\n    return null;\n  }\n  const key = `${model}:${accessToken}`;\n  let cachedTask = taskCache.get(key);\n  if (cachedTask && cachedTask.date < new Date(Date.now() - CACHE_DURATION)) {\n    taskCache.delete(key);\n    cachedTask = void 0;\n  }\n  if (cachedTask === void 0) {\n    const modelTask = await (options?.fetch ?? fetch)(`${HF_HUB_URL}/api/models/${model}?expand[]=pipeline_tag`, {\n      headers: accessToken ? { Authorization: `Bearer ${accessToken}` } : {}\n    }).then((resp) => resp.json()).then((json) => json.pipeline_tag).catch(() => null);\n    if (!modelTask) {\n      return null;\n    }\n    cachedTask = { task: modelTask, date: /* @__PURE__ */ new Date() };\n    taskCache.set(key, { task: modelTask, date: /* @__PURE__ */ new Date() });\n    if (taskCache.size > MAX_CACHE_ITEMS) {\n      taskCache.delete(taskCache.keys().next().value);\n    }\n  }\n  return cachedTask.task;\n}\n\n// src/lib/makeRequestOptions.ts\nvar HF_INFERENCE_API_BASE_URL = \"https://api-inference.huggingface.co\";\nvar tasks = null;\nasync function makeRequestOptions(args, options) {\n  const { accessToken, endpointUrl, ...otherArgs } = args;\n  let { model } = args;\n  const {\n    forceTask: task,\n    includeCredentials,\n    taskHint,\n    wait_for_model,\n    use_cache,\n    dont_load_model,\n    chatCompletion: chatCompletion2\n  } = options ?? {};\n  const headers = {};\n  if (accessToken) {\n    headers[\"Authorization\"] = `Bearer ${accessToken}`;\n  }\n  if (!model && !tasks && taskHint) {\n    const res = await fetch(`${HF_HUB_URL}/api/tasks`);\n    if (res.ok) {\n      tasks = await res.json();\n    }\n  }\n  if (!model && tasks && taskHint) {\n    const taskInfo = tasks[taskHint];\n    if (taskInfo) {\n      model = taskInfo.models[0].id;\n    }\n  }\n  if (!model) {\n    throw new Error(\"No model provided, and no default model found for this task\");\n  }\n  const binary = \"data\" in args && !!args.data;\n  if (!binary) {\n    headers[\"Content-Type\"] = \"application/json\";\n  }\n  if (wait_for_model) {\n    headers[\"X-Wait-For-Model\"] = \"true\";\n  }\n  if (use_cache === false) {\n    headers[\"X-Use-Cache\"] = \"false\";\n  }\n  if (dont_load_model) {\n    headers[\"X-Load-Model\"] = \"0\";\n  }\n  let url = (() => {\n    if (endpointUrl && isUrl(model)) {\n      throw new TypeError(\"Both model and endpointUrl cannot be URLs\");\n    }\n    if (isUrl(model)) {\n      console.warn(\"Using a model URL is deprecated, please use the `endpointUrl` parameter instead\");\n      return model;\n    }\n    if (endpointUrl) {\n      return endpointUrl;\n    }\n    if (task) {\n      return `${HF_INFERENCE_API_BASE_URL}/pipeline/${task}/${model}`;\n    }\n    return `${HF_INFERENCE_API_BASE_URL}/models/${model}`;\n  })();\n  if (chatCompletion2 && !url.endsWith(\"/chat/completions\")) {\n    url += \"/v1/chat/completions\";\n  }\n  let credentials;\n  if (typeof includeCredentials === \"string\") {\n    credentials = includeCredentials;\n  } else if (includeCredentials === true) {\n    credentials = \"include\";\n  }\n  const info = {\n    headers,\n    method: \"POST\",\n    body: binary ? args.data : JSON.stringify({\n      ...otherArgs.model && isUrl(otherArgs.model) ? omit(otherArgs, \"model\") : otherArgs\n    }),\n    ...credentials && { credentials },\n    signal: options?.signal\n  };\n  return { url, info };\n}\n\n// src/tasks/custom/request.ts\nasync function request(args, options) {\n  const { url, info } = await makeRequestOptions(args, options);\n  const response = await (options?.fetch ?? fetch)(url, info);\n  if (options?.retry_on_error !== false && response.status === 503 && !options?.wait_for_model) {\n    return request(args, {\n      ...options,\n      wait_for_model: true\n    });\n  }\n  if (!response.ok) {\n    if (response.headers.get(\"Content-Type\")?.startsWith(\"application/json\")) {\n      const output = await response.json();\n      if ([400, 422, 404, 500].includes(response.status) && options?.chatCompletion) {\n        throw new Error(`Server ${args.model} does not seem to support chat completion. Error: ${output.error}`);\n      }\n      if (output.error) {\n        throw new Error(JSON.stringify(output.error));\n      }\n    }\n    throw new Error(\"An error occurred while fetching the blob\");\n  }\n  if (response.headers.get(\"Content-Type\")?.startsWith(\"application/json\")) {\n    return await response.json();\n  }\n  return await response.blob();\n}\n\n// src/vendor/fetch-event-source/parse.ts\nfunction getLines(onLine) {\n  let buffer;\n  let position;\n  let fieldLength;\n  let discardTrailingNewline = false;\n  return function onChunk(arr) {\n    if (buffer === void 0) {\n      buffer = arr;\n      position = 0;\n      fieldLength = -1;\n    } else {\n      buffer = concat(buffer, arr);\n    }\n    const bufLength = buffer.length;\n    let lineStart = 0;\n    while (position < bufLength) {\n      if (discardTrailingNewline) {\n        if (buffer[position] === 10 /* NewLine */) {\n          lineStart = ++position;\n        }\n        discardTrailingNewline = false;\n      }\n      let lineEnd = -1;\n      for (; position < bufLength && lineEnd === -1; ++position) {\n        switch (buffer[position]) {\n          case 58 /* Colon */:\n            if (fieldLength === -1) {\n              fieldLength = position - lineStart;\n            }\n            break;\n          case 13 /* CarriageReturn */:\n            discardTrailingNewline = true;\n          case 10 /* NewLine */:\n            lineEnd = position;\n            break;\n        }\n      }\n      if (lineEnd === -1) {\n        break;\n      }\n      onLine(buffer.subarray(lineStart, lineEnd), fieldLength);\n      lineStart = position;\n      fieldLength = -1;\n    }\n    if (lineStart === bufLength) {\n      buffer = void 0;\n    } else if (lineStart !== 0) {\n      buffer = buffer.subarray(lineStart);\n      position -= lineStart;\n    }\n  };\n}\nfunction getMessages(onId, onRetry, onMessage) {\n  let message = newMessage();\n  const decoder = new TextDecoder();\n  return function onLine(line, fieldLength) {\n    if (line.length === 0) {\n      onMessage?.(message);\n      message = newMessage();\n    } else if (fieldLength > 0) {\n      const field = decoder.decode(line.subarray(0, fieldLength));\n      const valueOffset = fieldLength + (line[fieldLength + 1] === 32 /* Space */ ? 2 : 1);\n      const value = decoder.decode(line.subarray(valueOffset));\n      switch (field) {\n        case \"data\":\n          message.data = message.data ? message.data + \"\\n\" + value : value;\n          break;\n        case \"event\":\n          message.event = value;\n          break;\n        case \"id\":\n          onId(message.id = value);\n          break;\n        case \"retry\":\n          const retry = parseInt(value, 10);\n          if (!isNaN(retry)) {\n            onRetry(message.retry = retry);\n          }\n          break;\n      }\n    }\n  };\n}\nfunction concat(a, b) {\n  const res = new Uint8Array(a.length + b.length);\n  res.set(a);\n  res.set(b, a.length);\n  return res;\n}\nfunction newMessage() {\n  return {\n    data: \"\",\n    event: \"\",\n    id: \"\",\n    retry: void 0\n  };\n}\n\n// src/tasks/custom/streamingRequest.ts\nasync function* streamingRequest(args, options) {\n  const { url, info } = await makeRequestOptions({ ...args, stream: true }, options);\n  const response = await (options?.fetch ?? fetch)(url, info);\n  if (options?.retry_on_error !== false && response.status === 503 && !options?.wait_for_model) {\n    return yield* streamingRequest(args, {\n      ...options,\n      wait_for_model: true\n    });\n  }\n  if (!response.ok) {\n    if (response.headers.get(\"Content-Type\")?.startsWith(\"application/json\")) {\n      const output = await response.json();\n      if ([400, 422, 404, 500].includes(response.status) && options?.chatCompletion) {\n        throw new Error(`Server ${args.model} does not seem to support chat completion. Error: ${output.error}`);\n      }\n      if (output.error) {\n        throw new Error(output.error);\n      }\n    }\n    throw new Error(`Server response contains error: ${response.status}`);\n  }\n  if (!response.headers.get(\"content-type\")?.startsWith(\"text/event-stream\")) {\n    throw new Error(\n      `Server does not support event stream content type, it returned ` + response.headers.get(\"content-type\")\n    );\n  }\n  if (!response.body) {\n    return;\n  }\n  const reader = response.body.getReader();\n  let events = [];\n  const onEvent = (event) => {\n    events.push(event);\n  };\n  const onChunk = getLines(\n    getMessages(\n      () => {\n      },\n      () => {\n      },\n      onEvent\n    )\n  );\n  try {\n    while (true) {\n      const { done, value } = await reader.read();\n      if (done)\n        return;\n      onChunk(value);\n      for (const event of events) {\n        if (event.data.length > 0) {\n          if (event.data === \"[DONE]\") {\n            return;\n          }\n          const data = JSON.parse(event.data);\n          if (typeof data === \"object\" && data !== null && \"error\" in data) {\n            throw new Error(data.error);\n          }\n          yield data;\n        }\n      }\n      events = [];\n    }\n  } finally {\n    reader.releaseLock();\n  }\n}\n\n// src/lib/InferenceOutputError.ts\nvar InferenceOutputError = class extends TypeError {\n  constructor(message) {\n    super(\n      `Invalid inference output: ${message}. Use the 'request' method with the same parameters to do a custom call with no type checking.`\n    );\n    this.name = \"InferenceOutputError\";\n  }\n};\n\n// src/tasks/audio/audioClassification.ts\nasync function audioClassification(args, options) {\n  const res = await request(args, {\n    ...options,\n    taskHint: \"audio-classification\"\n  });\n  const isValidOutput = Array.isArray(res) && res.every((x) => typeof x.label === \"string\" && typeof x.score === \"number\");\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected Array<{label: string, score: number}>\");\n  }\n  return res;\n}\n\n// src/tasks/audio/automaticSpeechRecognition.ts\nasync function automaticSpeechRecognition(args, options) {\n  const res = await request(args, {\n    ...options,\n    taskHint: \"automatic-speech-recognition\"\n  });\n  const isValidOutput = typeof res?.text === \"string\";\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected {text: string}\");\n  }\n  return res;\n}\n\n// src/tasks/audio/textToSpeech.ts\nasync function textToSpeech(args, options) {\n  const res = await request(args, {\n    ...options,\n    taskHint: \"text-to-speech\"\n  });\n  const isValidOutput = res && res instanceof Blob;\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected Blob\");\n  }\n  return res;\n}\n\n// src/tasks/audio/audioToAudio.ts\nasync function audioToAudio(args, options) {\n  const res = await request(args, {\n    ...options,\n    taskHint: \"audio-to-audio\"\n  });\n  const isValidOutput = Array.isArray(res) && res.every(\n    (x) => typeof x.label === \"string\" && typeof x.blob === \"string\" && typeof x[\"content-type\"] === \"string\"\n  );\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected Array<{label: string, blob: string, content-type: string}>\");\n  }\n  return res;\n}\n\n// src/tasks/cv/imageClassification.ts\nasync function imageClassification(args, options) {\n  const res = await request(args, {\n    ...options,\n    taskHint: \"image-classification\"\n  });\n  const isValidOutput = Array.isArray(res) && res.every((x) => typeof x.label === \"string\" && typeof x.score === \"number\");\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected Array<{label: string, score: number}>\");\n  }\n  return res;\n}\n\n// src/tasks/cv/imageSegmentation.ts\nasync function imageSegmentation(args, options) {\n  const res = await request(args, {\n    ...options,\n    taskHint: \"image-segmentation\"\n  });\n  const isValidOutput = Array.isArray(res) && res.every((x) => typeof x.label === \"string\" && typeof x.mask === \"string\" && typeof x.score === \"number\");\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected Array<{label: string, mask: string, score: number}>\");\n  }\n  return res;\n}\n\n// src/tasks/cv/imageToText.ts\nasync function imageToText(args, options) {\n  const res = (await request(args, {\n    ...options,\n    taskHint: \"image-to-text\"\n  }))?.[0];\n  if (typeof res?.generated_text !== \"string\") {\n    throw new InferenceOutputError(\"Expected {generated_text: string}\");\n  }\n  return res;\n}\n\n// src/tasks/cv/objectDetection.ts\nasync function objectDetection(args, options) {\n  const res = await request(args, {\n    ...options,\n    taskHint: \"object-detection\"\n  });\n  const isValidOutput = Array.isArray(res) && res.every(\n    (x) => typeof x.label === \"string\" && typeof x.score === \"number\" && typeof x.box.xmin === \"number\" && typeof x.box.ymin === \"number\" && typeof x.box.xmax === \"number\" && typeof x.box.ymax === \"number\"\n  );\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\n      \"Expected Array<{label:string; score:number; box:{xmin:number; ymin:number; xmax:number; ymax:number}}>\"\n    );\n  }\n  return res;\n}\n\n// src/tasks/cv/textToImage.ts\nasync function textToImage(args, options) {\n  const res = await request(args, {\n    ...options,\n    taskHint: \"text-to-image\"\n  });\n  const isValidOutput = res && res instanceof Blob;\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected Blob\");\n  }\n  return res;\n}\n\n// src/utils/base64FromBytes.ts\nfunction base64FromBytes(arr) {\n  if (globalThis.Buffer) {\n    return globalThis.Buffer.from(arr).toString(\"base64\");\n  } else {\n    const bin = [];\n    arr.forEach((byte) => {\n      bin.push(String.fromCharCode(byte));\n    });\n    return globalThis.btoa(bin.join(\"\"));\n  }\n}\n\n// src/tasks/cv/imageToImage.ts\nasync function imageToImage(args, options) {\n  let reqArgs;\n  if (!args.parameters) {\n    reqArgs = {\n      accessToken: args.accessToken,\n      model: args.model,\n      data: args.inputs\n    };\n  } else {\n    reqArgs = {\n      ...args,\n      inputs: base64FromBytes(\n        new Uint8Array(args.inputs instanceof ArrayBuffer ? args.inputs : await args.inputs.arrayBuffer())\n      )\n    };\n  }\n  const res = await request(reqArgs, {\n    ...options,\n    taskHint: \"image-to-image\"\n  });\n  const isValidOutput = res && res instanceof Blob;\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected Blob\");\n  }\n  return res;\n}\n\n// src/tasks/cv/zeroShotImageClassification.ts\nasync function zeroShotImageClassification(args, options) {\n  const reqArgs = {\n    ...args,\n    inputs: {\n      image: base64FromBytes(\n        new Uint8Array(\n          args.inputs.image instanceof ArrayBuffer ? args.inputs.image : await args.inputs.image.arrayBuffer()\n        )\n      )\n    }\n  };\n  const res = await request(reqArgs, {\n    ...options,\n    taskHint: \"zero-shot-image-classification\"\n  });\n  const isValidOutput = Array.isArray(res) && res.every((x) => typeof x.label === \"string\" && typeof x.score === \"number\");\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected Array<{label: string, score: number}>\");\n  }\n  return res;\n}\n\n// src/tasks/nlp/featureExtraction.ts\nasync function featureExtraction(args, options) {\n  const defaultTask = args.model ? await getDefaultTask(args.model, args.accessToken, options) : void 0;\n  const res = await request(args, {\n    ...options,\n    taskHint: \"feature-extraction\",\n    ...defaultTask === \"sentence-similarity\" && { forceTask: \"feature-extraction\" }\n  });\n  let isValidOutput = true;\n  const isNumArrayRec = (arr, maxDepth, curDepth = 0) => {\n    if (curDepth > maxDepth)\n      return false;\n    if (arr.every((x) => Array.isArray(x))) {\n      return arr.every((x) => isNumArrayRec(x, maxDepth, curDepth + 1));\n    } else {\n      return arr.every((x) => typeof x === \"number\");\n    }\n  };\n  isValidOutput = Array.isArray(res) && isNumArrayRec(res, 3, 0);\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected Array<number[][][] | number[][] | number[] | number>\");\n  }\n  return res;\n}\n\n// src/tasks/nlp/fillMask.ts\nasync function fillMask(args, options) {\n  const res = await request(args, {\n    ...options,\n    taskHint: \"fill-mask\"\n  });\n  const isValidOutput = Array.isArray(res) && res.every(\n    (x) => typeof x.score === \"number\" && typeof x.sequence === \"string\" && typeof x.token === \"number\" && typeof x.token_str === \"string\"\n  );\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\n      \"Expected Array<{score: number, sequence: string, token: number, token_str: string}>\"\n    );\n  }\n  return res;\n}\n\n// src/tasks/nlp/questionAnswering.ts\nasync function questionAnswering(args, options) {\n  const res = await request(args, {\n    ...options,\n    taskHint: \"question-answering\"\n  });\n  const isValidOutput = typeof res === \"object\" && !!res && typeof res.answer === \"string\" && typeof res.end === \"number\" && typeof res.score === \"number\" && typeof res.start === \"number\";\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected {answer: string, end: number, score: number, start: number}\");\n  }\n  return res;\n}\n\n// src/tasks/nlp/sentenceSimilarity.ts\nasync function sentenceSimilarity(args, options) {\n  const defaultTask = args.model ? await getDefaultTask(args.model, args.accessToken, options) : void 0;\n  const res = await request(args, {\n    ...options,\n    taskHint: \"sentence-similarity\",\n    ...defaultTask === \"feature-extraction\" && { forceTask: \"sentence-similarity\" }\n  });\n  const isValidOutput = Array.isArray(res) && res.every((x) => typeof x === \"number\");\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected number[]\");\n  }\n  return res;\n}\n\n// src/tasks/nlp/summarization.ts\nasync function summarization(args, options) {\n  const res = await request(args, {\n    ...options,\n    taskHint: \"summarization\"\n  });\n  const isValidOutput = Array.isArray(res) && res.every((x) => typeof x?.summary_text === \"string\");\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected Array<{summary_text: string}>\");\n  }\n  return res?.[0];\n}\n\n// src/tasks/nlp/tableQuestionAnswering.ts\nasync function tableQuestionAnswering(args, options) {\n  const res = await request(args, {\n    ...options,\n    taskHint: \"table-question-answering\"\n  });\n  const isValidOutput = typeof res?.aggregator === \"string\" && typeof res.answer === \"string\" && Array.isArray(res.cells) && res.cells.every((x) => typeof x === \"string\") && Array.isArray(res.coordinates) && res.coordinates.every((coord) => Array.isArray(coord) && coord.every((x) => typeof x === \"number\"));\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\n      \"Expected {aggregator: string, answer: string, cells: string[], coordinates: number[][]}\"\n    );\n  }\n  return res;\n}\n\n// src/tasks/nlp/textClassification.ts\nasync function textClassification(args, options) {\n  const res = (await request(args, {\n    ...options,\n    taskHint: \"text-classification\"\n  }))?.[0];\n  const isValidOutput = Array.isArray(res) && res.every((x) => typeof x?.label === \"string\" && typeof x.score === \"number\");\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected Array<{label: string, score: number}>\");\n  }\n  return res;\n}\n\n// src/utils/toArray.ts\nfunction toArray(obj) {\n  if (Array.isArray(obj)) {\n    return obj;\n  }\n  return [obj];\n}\n\n// src/tasks/nlp/textGeneration.ts\nasync function textGeneration(args, options) {\n  const res = toArray(\n    await request(args, {\n      ...options,\n      taskHint: \"text-generation\"\n    })\n  );\n  const isValidOutput = Array.isArray(res) && res.every((x) => typeof x?.generated_text === \"string\");\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected Array<{generated_text: string}>\");\n  }\n  return res?.[0];\n}\n\n// src/tasks/nlp/textGenerationStream.ts\nasync function* textGenerationStream(args, options) {\n  yield* streamingRequest(args, {\n    ...options,\n    taskHint: \"text-generation\"\n  });\n}\n\n// src/tasks/nlp/tokenClassification.ts\nasync function tokenClassification(args, options) {\n  const res = toArray(\n    await request(args, {\n      ...options,\n      taskHint: \"token-classification\"\n    })\n  );\n  const isValidOutput = Array.isArray(res) && res.every(\n    (x) => typeof x.end === \"number\" && typeof x.entity_group === \"string\" && typeof x.score === \"number\" && typeof x.start === \"number\" && typeof x.word === \"string\"\n  );\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\n      \"Expected Array<{end: number, entity_group: string, score: number, start: number, word: string}>\"\n    );\n  }\n  return res;\n}\n\n// src/tasks/nlp/translation.ts\nasync function translation(args, options) {\n  const res = await request(args, {\n    ...options,\n    taskHint: \"translation\"\n  });\n  const isValidOutput = Array.isArray(res) && res.every((x) => typeof x?.translation_text === \"string\");\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected type Array<{translation_text: string}>\");\n  }\n  return res?.length === 1 ? res?.[0] : res;\n}\n\n// src/tasks/nlp/zeroShotClassification.ts\nasync function zeroShotClassification(args, options) {\n  const res = toArray(\n    await request(args, {\n      ...options,\n      taskHint: \"zero-shot-classification\"\n    })\n  );\n  const isValidOutput = Array.isArray(res) && res.every(\n    (x) => Array.isArray(x.labels) && x.labels.every((_label) => typeof _label === \"string\") && Array.isArray(x.scores) && x.scores.every((_score) => typeof _score === \"number\") && typeof x.sequence === \"string\"\n  );\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected Array<{labels: string[], scores: number[], sequence: string}>\");\n  }\n  return res;\n}\n\n// src/tasks/nlp/chatCompletion.ts\nasync function chatCompletion(args, options) {\n  const res = await request(args, {\n    ...options,\n    taskHint: \"text-generation\",\n    chatCompletion: true\n  });\n  const isValidOutput = typeof res === \"object\" && Array.isArray(res?.choices) && typeof res?.created === \"number\" && typeof res?.id === \"string\" && typeof res?.model === \"string\" && typeof res?.system_fingerprint === \"string\" && typeof res?.usage === \"object\";\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected ChatCompletionOutput\");\n  }\n  return res;\n}\n\n// src/tasks/nlp/chatCompletionStream.ts\nasync function* chatCompletionStream(args, options) {\n  yield* streamingRequest(args, {\n    ...options,\n    taskHint: \"text-generation\",\n    chatCompletion: true\n  });\n}\n\n// src/tasks/multimodal/documentQuestionAnswering.ts\nasync function documentQuestionAnswering(args, options) {\n  const reqArgs = {\n    ...args,\n    inputs: {\n      question: args.inputs.question,\n      // convert Blob or ArrayBuffer to base64\n      image: base64FromBytes(\n        new Uint8Array(\n          args.inputs.image instanceof ArrayBuffer ? args.inputs.image : await args.inputs.image.arrayBuffer()\n        )\n      )\n    }\n  };\n  const res = toArray(\n    await request(reqArgs, {\n      ...options,\n      taskHint: \"document-question-answering\"\n    })\n  )?.[0];\n  const isValidOutput = typeof res?.answer === \"string\" && (typeof res.end === \"number\" || typeof res.end === \"undefined\") && (typeof res.score === \"number\" || typeof res.score === \"undefined\") && (typeof res.start === \"number\" || typeof res.start === \"undefined\");\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected Array<{answer: string, end?: number, score?: number, start?: number}>\");\n  }\n  return res;\n}\n\n// src/tasks/multimodal/visualQuestionAnswering.ts\nasync function visualQuestionAnswering(args, options) {\n  const reqArgs = {\n    ...args,\n    inputs: {\n      question: args.inputs.question,\n      // convert Blob or ArrayBuffer to base64\n      image: base64FromBytes(\n        new Uint8Array(\n          args.inputs.image instanceof ArrayBuffer ? args.inputs.image : await args.inputs.image.arrayBuffer()\n        )\n      )\n    }\n  };\n  const res = (await request(reqArgs, {\n    ...options,\n    taskHint: \"visual-question-answering\"\n  }))?.[0];\n  const isValidOutput = typeof res?.answer === \"string\" && typeof res.score === \"number\";\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected Array<{answer: string, score: number}>\");\n  }\n  return res;\n}\n\n// src/tasks/tabular/tabularRegression.ts\nasync function tabularRegression(args, options) {\n  const res = await request(args, {\n    ...options,\n    taskHint: \"tabular-regression\"\n  });\n  const isValidOutput = Array.isArray(res) && res.every((x) => typeof x === \"number\");\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected number[]\");\n  }\n  return res;\n}\n\n// src/tasks/tabular/tabularClassification.ts\nasync function tabularClassification(args, options) {\n  const res = await request(args, {\n    ...options,\n    taskHint: \"tabular-classification\"\n  });\n  const isValidOutput = Array.isArray(res) && res.every((x) => typeof x === \"number\");\n  if (!isValidOutput) {\n    throw new InferenceOutputError(\"Expected number[]\");\n  }\n  return res;\n}\n\n// src/HfInference.ts\nvar HfInference = class {\n  accessToken;\n  defaultOptions;\n  constructor(accessToken = \"\", defaultOptions = {}) {\n    this.accessToken = accessToken;\n    this.defaultOptions = defaultOptions;\n    for (const [name, fn] of Object.entries(tasks_exports)) {\n      Object.defineProperty(this, name, {\n        enumerable: false,\n        value: (params, options) => (\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          fn({ ...params, accessToken }, { ...defaultOptions, ...options })\n        )\n      });\n    }\n  }\n  /**\n   * Returns copy of HfInference tied to a specified endpoint.\n   */\n  endpoint(endpointUrl) {\n    return new HfInferenceEndpoint(endpointUrl, this.accessToken, this.defaultOptions);\n  }\n};\nvar HfInferenceEndpoint = class {\n  constructor(endpointUrl, accessToken = \"\", defaultOptions = {}) {\n    accessToken;\n    defaultOptions;\n    for (const [name, fn] of Object.entries(tasks_exports)) {\n      Object.defineProperty(this, name, {\n        enumerable: false,\n        value: (params, options) => (\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          fn({ ...params, accessToken, endpointUrl }, { ...defaultOptions, ...options })\n        )\n      });\n    }\n  }\n};\nexport {\n  HfInference,\n  HfInferenceEndpoint,\n  InferenceOutputError,\n  audioClassification,\n  audioToAudio,\n  automaticSpeechRecognition,\n  chatCompletion,\n  chatCompletionStream,\n  documentQuestionAnswering,\n  featureExtraction,\n  fillMask,\n  imageClassification,\n  imageSegmentation,\n  imageToImage,\n  imageToText,\n  objectDetection,\n  questionAnswering,\n  request,\n  sentenceSimilarity,\n  streamingRequest,\n  summarization,\n  tableQuestionAnswering,\n  tabularClassification,\n  tabularRegression,\n  textClassification,\n  textGeneration,\n  textGenerationStream,\n  textToImage,\n  textToSpeech,\n  tokenClassification,\n  translation,\n  visualQuestionAnswering,\n  zeroShotClassification,\n  zeroShotImageClassification\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// startup\n// Load entry module and return exports\n// This entry module used 'module' so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(36127);\n"],"names":["webpackQueues","webpackExports","webpackError","resolveQueue","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","_asyncIterator","AsyncFromSyncIterator","AsyncFromSyncIteratorContinuation","reject","hf_API_KEY","window","electron","HUGGINGHUB_API_KEY","initChat","client","chatArea","document","getElementById","userInput","sendBtn","modelSelect","AutoScroll","check","classifyText","_x","_classifyText","_callee","text","isImageRequest","escapedText","Currentmodel","userMessageId","copyButtonId","userMessage","provider","aiMessage","aiMessageUId","foldId","_Timer","options","stream","output","thinkContent","actualResponse","isThinking","fullResponse","hasfinishedThinking","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","chunk","_chunk$choices","_choice$delta","choice","deltaContent","_eval","_closeEval","_context","startsWith","escapeHTML","concat","Math","random","toString","substring","createElement","indexOf","VisionChat","innerHTML","classList","add","appendChild","implementUserCopy","scrollTop","scrollHeight","ImageGenerator","createImage","addToChat","role","content","getDateTime","checked","scrollToBottom","Timer","model","messages","getChat","max_tokens","chatCompletionStream","HandleProcessingEventChanges","trackTime","choices","delta","replace","marked","addCopyListeners","debounceRenderMathJax","t0","send","message","t1","handleRequestError","_x2","_x3","_VisionChat","_callee2","fileType","fileDataUrl","Vmodel","fileContainerId","userContent","imageContent","documentContent","VisionMessage","VisionMessageUId","visionstream","visionMs","_iteratorAbruptCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","_chunk$choices2","_choice$delta2","_args2","_context2","undefined","split","addUserMessage","map","_url","image_url","url","_toConsumableArray","addToVisionChat","console","log","clearImages","getVisionChat","VisionUserMessageUId","VisioncopyButtonId","messageHtml","fileHtml","join","filesContainer","className","copyBMan","addEventListener","event","detail","inputText","textContent","trim","style","height","min","innerHeight","contains","key","shiftKey","preventDefault","HfInference","_classCallCheck","this","_generateImage","_callee3","data","response","blob","_args3","_context3","fetch","headers","Authorization","body","JSON","stringify","URL","createObjectURL","error","_x4","imageId","loadingMessage","_createImage","_callee4","imageData","secondsElapsed","timerInterval","useFlux","imageUrl","_context4","inputs","createLoadingMessage","setInterval","querySelector","generateImage","clearInterval","createImageElement","_x5","__defProp","tasks_exports","omit","props","propsArr","Array","isArray","assign","prop","pick","filter","includes","isUrl","modelOrUrl","test","target","all","get","__export","audioClassification","audioToAudio","automaticSpeechRecognition","chatCompletion","documentQuestionAnswering","featureExtraction","fillMask","imageClassification","imageSegmentation","imageToImage","imageToText","objectDetection","questionAnswering","request","sentenceSimilarity","streamingRequest","summarization","tableQuestionAnswering","tabularClassification","tabularRegression","textClassification","textGeneration","textGenerationStream","textToImage","textToSpeech","tokenClassification","translation","visualQuestionAnswering","zeroShotClassification","zeroShotImageClassification","taskCache","Map","CACHE_DURATION","MAX_CACHE_ITEMS","HF_HUB_URL","getDefaultTask","accessToken","cachedTask","date","Date","now","delete","modelTask","resp","json","pipeline_tag","catch","task","set","size","HF_INFERENCE_API_BASE_URL","tasks","makeRequestOptions","args","endpointUrl","otherArgs","forceTask","includeCredentials","taskHint","wait_for_model","use_cache","dont_load_model","chatCompletion2","res","ok","taskInfo","models","id","binary","credentials","warn","endsWith","info","signal","retry_on_error","status","reader","getReader","events","onChunk","onLine","buffer","position","fieldLength","discardTrailingNewline","arr","b","Uint8Array","bufLength","lineStart","lineEnd","subarray","getLines","retry","decoder","TextDecoder","line","field","decode","valueOffset","parseInt","getMessages","read","parse","releaseLock","InferenceOutputError","super","every","x","label","score","Blob","mask","generated_text","box","xmin","ymin","xmax","ymax","base64FromBytes","globalThis","Buffer","from","bin","byte","String","fromCharCode","btoa","reqArgs","parameters","ArrayBuffer","arrayBuffer","image","defaultTask","isValidOutput","isNumArrayRec","maxDepth","curDepth","sequence","token","token_str","answer","end","start","summary_text","aggregator","cells","coordinates","coord","toArray","obj","entity_group","word","translation_text","labels","_label","scores","_score","created","system_fingerprint","usage","question","defaultOptions","fn","entries","params","endpoint","HfInferenceEndpoint","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","queue","hasAwait","currentDeps","outerResolve","depQueues","Set","promise","rej","deps","dep","ret","wrapDeps","getResult","fnQueue","q","has","err","definition"],"sourceRoot":""}