{"version":3,"file":"_chatStore.js","mappings":"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","sources":["webpack://QuickAi/./src/renderer/js/chatStore.js"],"sourcesContent":["const storagePath = window.electron.joinPath(window.electron.home_dir(), '.quickai/.quickai.store');\nconst chatArea = document.getElementById('chatArea');\nconst conversationsPanel = document.getElementById('conversations');\nescapeHTML = window.escapeHTML;\nconst modal = document.getElementById('renameModal');\nconst modalTitle = document.getElementById('modalTitle');\nconst newNameInput = document.getElementById('newName');\nconst renameButton = document.getElementById('renameButton');\nconst cancelButton = document.getElementById('cancelButton');\nlet activeItem;\n\nasync function checkAndCreateDirectory() {\n    if (storagePath) {\n        try {\n            // Check if the directory exists\n            const exists = await window.electron.mkdir(storagePath);\n            if (!exists) {\n                console.log(\"Error creating directory\", storagePath)\n            } else {\n                //console.log('Directory exists');\n            }\n        } catch (error) {\n            console.error('Error checking or creating directory:', error);\n        }\n    }\n}\n\n\nclass ConversationManager {\n  constructor(storagePath) {\n    this.storagePath = storagePath;\n  }\n\n  // Save conversation to a JSON file\n  async saveConversation(conversationData, conversationId) {\n    const filePath = `${this.storagePath}/${conversationId}.json`;\n    //console.log(JSON.stringify(conversationData))\n    try {\n      //console.log(\"Saving: \" + conversationId + filePath)\n      await window.electron.write(filePath, conversationData);\n    } catch (err) {\n      console.error('Error saving conversation:', err);\n    }\n  }\n\n  // Load conversation from a JSON file\n  async loadConversation(conversationId) {\n    const filePath = `${this.storagePath}/${conversationId}.json`;\n    try {\n      if (window.electron.stat(filePath)) {\n        const model = conversationId.startsWith('V') ? \"Vision\" : \"text\";\n        const data = await window.electron.read(filePath, model);\n        return [data, model]\n      }\n    } catch (err) {\n      console.error('Error loading conversation:', err);\n    }\n    return null;\n  }\n\n  // Add a message to the conversation history\n  addMessage(role, content, type = \"text\", fileDataUrl = null, fileType = null) {\n    let messageContent = [];\n    if (type === \"vision\") {\n      if (fileDataUrl){\n        messageContent = [\n          { type: \"text\", text: content },\n          { type: fileType, [fileType]: { url: fileDataUrl } }\n        ];\n      } else {\n        messageContent = [\n          { type: \"text\", text: content }\n        ];\n      }\n      window.electron.addToVisionChat({ role, content: messageContent });\n  } else {\n      messageContent = [{ type: \"text\", text: content }];\n      window.electron.addToChat({ role, content: messageContent });\n    }\n  }\n\n  // Render the conversation in the web interface\n  renderConversation(conversationData, model = \"text\") {\n    chatArea.innerHTML = '';\n    if (model === 'Vision'){\n      document.getElementById('mode').value = 'Vision';\n    } else{\n      document.getElementById('mode').value = 'Basic mode';\n    }\n    conversationData.forEach(message => {\n      if (message.role === \"user\") {\n        //console.log(message.content[0]);\n        this.renderUserMessage(message.content, model);\n      } else if (message.role === \"assistant\") {\n        if (model.toLocaleLowerCase() === \"vision\") { //this.getMessageType(message.content)\n          this.renderVisionAssistantMessage(message.content);\n        } else {\n          this.renderTextAssistantMessage(message.content);\n        }\n      }\n      window.electron.CreateNew(conversationData, model)\n    });\n\n    window.implementUserCopy();\n    window.copyBMan();\n    window.addCopyListeners();\n\n    if (check === false) {\n      // Sending a message to the main process\n      window.electron.send('toMain', { message: 'set-Utitility-Script' });\n      check = true;\n    }\n  }\n\n  // Get file type from message content\n  getFileType(content) {\n    try {\n      const fileDict = {\n        \"image_url\": \"image\",\n        \"file_url\": \"document\"\n      };\n\n      // Find the item with type \"image_url\" or \"file_url\"\n      const fileTypeItem = content.find(item => item.type === \"image_url\" || item.type === \"file_url\");\n\n      // Log the type of the found item\n      console.log(fileTypeItem?.type);\n\n      // Check if the found item exists and has a valid type\n      if (fileTypeItem && fileDict[fileTypeItem.type]) {\n        return fileDict[fileTypeItem.type];\n      }\n\n      // If no valid file type is found, log and return null\n      console.log('No file attachment!');\n      return null;\n\n    } catch (error) {\n      if (error.name === \"TypeError\") {\n        console.log('No file attachment!');\n      } else {\n        console.error(\"Error determining file type:\", error.name);\n      }\n      return null;\n    }\n  }\n\ngetFileUrl(content) {\n  try {\n    // Find the item with type \"image_url\"\n    const fileMessage = content.find(item => item.type === \"image_url\");\n\n    // Check if the item exists and has an images array\n    if (fileMessage && fileMessage.images) {\n      // Extract all URLs from the images array\n      return fileMessage.images.map(image => image.url);\n    }\n\n    return [];\n  } catch (error) {\n    console.error(\"Error extracting file URL:\", error);\n    return [];\n  }\n}\n\n  // Get message type (text or vision) from message content\n  getMessageType(content) {\n    const fileMessage = content.find(item => item.type === \"image_url\" || item.type === \"file_url\");\n    return fileMessage ? \"vision\" : \"text\";\n  }\n\n  // Render user message\n  renderUserMessage(content, model='text') {\n    const userMessageId = `msg_${Math.random().toString(34).substring(3, 9)}`;\n    const copyButtonId = `copy-button-${Math.random().toString(36).substring(5, 9)}`;\n    const fileType = this.getFileType(content);\n    var fileDataUrl = null;\n    var userText = null;\n    //console.log(fileType)\n    if (fileType){\n      fileDataUrl = this.getFileUrl(content);\n    }\n    const userMessage = document.createElement(\"div\");\n    userMessage.className = \"flex justify-end mb-4\";\n\n    if (model.toLocaleLowerCase() === 'vision'){\n      // Exclude timestamp when rendering user messages\n      userText = content[0].text.slice(-1)===']' ? content[0].text.substring(0, content[0].text.length - 22) : content[0].text\n    } else{\n      userText = content.slice(-1) === ']' ? content.substring(0, content.length - 22) : content\n    }\n    const messageHtml =`\n        <div data-id=\"${userMessageId}\" class=\"${userMessageId} relative bg-blue-500 dark:bg-[#142384] text-black dark:text-white rounded-lg p-2 md:p-3 shadow-md w-fit max-w-full lg:max-w-5xl\">\n            <p class=\"whitespace-pre-wrap break-words max-w-xl md:max-w-2xl lg:max-w-3xl\">${escapeHTML(userText)}</p>\n            <button id=\"${copyButtonId}\" class=\"user-copy-button absolute rounded-md px-2 py-2 right-1 bottom-0.5 bg-gradient-to-r from-indigo-400 to-pink-400 dark:from-gray-700 dark:to-gray-900 hover:bg-indigo-200 dark:hover:bg-gray-600 text-white dark:text-gray-100 rounded-lg font-semibold border border-2 cursor-pointer opacity-40 hover:opacity-80\" onclick=\"CopyAll('.${userMessageId}', this)\">\n            Copy\n            </button>\n        </div>\n        `;\n\n    // Create files container if they exist\n    if (fileDataUrl){\n      const fileContainerId = `FCont_${Math.random().toString(35).substring(2, 8)}`;\n      const fileHtml = `\n      <div id=\"${fileContainerId}\" class=\"flex justify-end\">\n        <article class=\"flex flex-rows-1 md:flex-rows-3 bg-cyan-100 w-fit p-1 rounded-lg\">\n        ${fileDataUrl && fileType === \"image\" ? fileDataUrl.map(url => `<img src=\"${url}\" alt=\"Uploaded Image\" class=\"rounded-md w-14 h-14 my-auto mx-1\" />`).join('') : fileType === \"document\" ? fileDataUrl.map(url => `<div class=\"inline-flex items-center\"><svg class=\"w-6 h-6 mr-2\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2zm0 16V4a2 2 0 0 1 2 2v12a2 2 0 0 0-2-2zm1-1h4v10h-4V4z\"/></svg><span>${url}</span></div>`).join('') : \"\"}\n        </article>\n      </div>\n      `;\n      const filesContainer = document.createElement(\"div\");\n      filesContainer.className = \"flex justify-end\";\n      filesContainer.innerHTML = fileHtml;\n      chatArea.appendChild(filesContainer);\n    }\n\n    // Append the user text to the page\n    userMessage.innerHTML = messageHtml;\n    chatArea.appendChild(userMessage);\n  }\n\n  // Render text-based assistant message\n  renderTextAssistantMessage(content) {\n    const aiMessageId = `msg_${Math.random().toString(30).substring(3, 9)}`;\n    const aiMessage = document.createElement('div');\n    aiMessage.classList.add('flex', 'justify-start', 'mb-12', 'overflow-wrap');\n    chatArea.appendChild(aiMessage);\n    //console.log(content)\n    aiMessage.innerHTML = `\n    <section class=\"relative w-fit max-w-full lg:max-w-6xl mb-8\">\n        <div class=\"${aiMessageId} bg-gray-200 text-gray-800 dark:bg-[#28185a] dark:text-white rounded-lg px-4 mb-6 pt-2 pb-4 w-fit max-w-full lg:max-w-6xl\">${window.marked(content)}\n        </div>\n        <section class=\"options flex absolute bottom-0 left-0 space-x-4 cursor-pointer\">\n            <div class=\"opacity-70 hover:opacity-100 p-1 border-none\" id=\"exportButton\" onclick=\"toggleExportOptions(this);\" title=\"Export\">\n                <svg class=\"fill-rose-700 dark:fill-gray-700 text-gray-600 bg-white w-6 h-6 rounded-full\" viewBox=\"0 0 24 24\">\n                    <path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"/>\n                </svg>\n            </div>\n            <div class=\"rounded-lg p-1 opacity-70 cursor-pointer\" aria-label=\"Copy\" title=\"Copy\" id=\"copy-all\" onclick=\"CopyAll('.${aiMessageId}');\">\n            <svg id=\"copy-svg-${aiMessageId}\" class=\"w-5 md:w-6 h-5 md:h-6\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path class=\"fill-black dark:fill-pink-300\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z\"></path>\n            </svg>\n            </div>\n        </section>\n\n        <div id=\"exportOptions\" class=\"hidden block absolute bottom-6 left-0 bg-white dark:bg-gray-800 p-2 rounded shadow-md z-50 transition-300\">\n\n            <ul class=\"list-none p-0\">\n                <li class=\"mb-2\">\n                <a href=\"\"  class=\"text-blue-500 dark:text-blue-400\" onclick=\"HTML2Pdf(event, '.${aiMessageId}')\">1. Export to PDF</svg></a>\n                </li>\n                <li class=\"mb-2\">\n                    <a href=\"\"  class=\"text-blue-500 dark:text-blue-400\" onclick=\"HTML2Jpg(event, '.${aiMessageId}')\">2. Export to JPG</a>\n                </li>\n                <li>\n                    <a href=\"\" class=\"text-blue-500 dark:text-blue-400\" onclick=\"HTML2Word(event, '.${aiMessageId}')\">3. Export to DOCX</a>\n                </li>\n                <li>\n                    <a href=\"\" class=\"text-blue-500 dark:text-blue-400 decoration-underline\" onclick=\"SuperHTML2Word(event, '.${aiMessageId}')\">4. Word Export Advance</a>\n                </li>\n            </ul>\n        </div>\n    </section>\n    `;\n  }\n\n  // Render vision-based assistant message\n  renderVisionAssistantMessage(content) {\n    const visionMessageId = `msg_${Math.random().toString(30).substring(3, 9)}`;\n    const visionMessage = document.createElement('div');\n    visionMessage.classList.add('flex', 'justify-start', 'mb-12', 'overflow-wrap');\n    chatArea.appendChild(visionMessage);\n\n    //const fileType = this.getFileType(content);\n    //const fileDataUrl = this.getFileUrl(content);\n   visionMessage.innerHTML = `\n        <section class=\"relative w-fit max-w-full lg:max-w-6xl mb-8\">\n          <div class=\"${visionMessageId} bg-gray-200 text-gray-800 dark:bg-[#28185a] dark:text-white rounded-lg px-4 mb-6 pt-2 pb-4 w-fit max-w-full lg:max-w-6xl\">${marked(content[0].text)}</p>\n          </div>\n          <section class=\"options flex absolute bottom-0 left-0 space-x-4 cursor-pointer\">\n            <div class=\"opacity-70 hover:opacity-100 p-1\" id=\"exportButton\" onclick=\"toggleExportOptions(this);\" title=\"Export\">\n              <svg class=\"fill-rose-700 dark:fill-gray-700 text-gray-600 bg-white w-6 h-6 rounded-full\" viewBox=\"0 0 24 24\">\n                <path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"/>\n              </svg>\n            </div>\n            <div class=\"rounded-lg p-1 opacity-70 cursor-pointer\" aria-label=\"Copy\" title=\"Copy\" id=\"copy-all\" onclick=\"CopyAll('.${visionMessageId}');\">\n              <svg id=\"copy-svg-${visionMessageId}\"\n                class=\"w-5 md:w-6 h-5 md:h-6 cursor-pointer\"\n                viewBox=\"0 0 24 24\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\">\n                <!-- path content remains the same -->\n                <path\n                  class=\"fill-black dark:fill-pink-300 transition duration-300 ease-in-out fill-opacity-40 hover:fill-opacity-100\"\n                  fill-rule=\"evenodd\"\n                  clip-rule=\"evenodd\"\n                  d=\"M7 5C7 3.34315 8.34315 2 10 2H19C20.6569 2 22 3.34315 22 5V14C22 15.6569 20.6569 17 19 17H17V19C17 20.6569 15.6569 22 14 22H5C3.34315 22 2 20.6569 2 19V10C2 8.34315 3.34315 7 5 7H7V5ZM9 7H14C15.6569 7 17 8.34315 17 10V15H19C19.5523 15 20 14.5523 20 14V5C20 4.44772 19.5523 4 19 4H10C9.44772 4 9 4.44772 9 5V7ZM5 9C4.44772 9 4 9.44772 4 10V19C4 19.5523 4.44772 20 5 20H14C14.5523 20 15 19.5523 15 19V10C15 9.44772 14.5523 9 14 9H5Z\"\n                />\n                <!-- Circle for visual feedback -->\n                <circle class=\"h-2 w-2 absolute -top-2 -left-2 bg-blue-500 opacity-0 fill-opacity-0\" r=\"1\" />\n              </svg>\n            </div>\n          </section>\n          <div id=\"exportOptions\" class=\"hidden block absolute bottom-6 left-0 bg-white dark:bg-gray-800 p-2 rounded shadow-md z-50 transition-300\">\n\n            <ul class=\"list-none p-0\">\n                <li class=\"mb-2\">\n                    <a href=\"\" class=\"text-blue-500 dark:text-blue-400\" onclick=\"HTML2Pdf(event, '.${visionMessageId}')\">1. Export to PDF</a>\n                </li>\n                <li class=\"mb-2\">\n                    <a href=\"\" class=\"text-blue-500 dark:text-blue-400\" onclick=\"HTML2Jpg(event, '.${visionMessageId}')\">2. Export to JPG</a>\n                </li>\n                <li>\n                    <a href=\"\" class=\"text-blue-500 dark:text-blue-400\" onclick=\"HTML2Word(event, '.${visionMessageId}')\">3. Export to DOCX</a>\n                </li>\n                <li>\n                    <a href=\"\" class=\"text-blue-500 dark:text-blue-400 decoration-underline\" onclick=\"SuperHTML2Word(event, '.${visionMessageId}')\">4. Word Export Advance</a>\n                </li>\n            </ul>\n          </div>\n          </section>`;\n          /*\n          ${(fileDataUrl && fileType) ? `<div class=\"mt-2\">${fileType === \"image_url\" ? `<img src=\"${fileDataUrl}\" alt=\"Uploaded Image\" class=\"rounded-md my-auto\" />` : `<svg class=\"w-6 h-6 mr-2\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2-2H14a2 2 0 0 0 2 2V6a2 2 0 0 0-2-2zM14 2H10a2 2 0 0 1 2v10a2 2 0 0 1 2 2V14z\"/>\n              </svg>`}</div>` : \"\"}\n        </section>\n          */\n        }\n}\nconst conversationManager = new ConversationManager(storagePath);\n\n// Function to fetch conversation files and display their IDs\nasync function fetchConversations() {\n  conversationsPanel.innerHTML = `<div class=\"justify-center items-center\">\n  <p class=\"text-center text-rose-400 dark:text-slate-400 text-md font-semibold\">Empty!</p>\n  </div>\n  `;// Clear previous entries\n\n  try {\n    const files = await window.electron.readDir(storagePath);\n\n    if (files.length > 0) {\n      conversationsPanel.innerHTML = ''; // Clear the pane if conversations exist\n      // Define the colors you want to cycle through\n      const colors = ['bg-amber-500', 'bg-rose-900', 'bg-teal-700', 'bg-red-500', 'bg-blue-500', 'bg-green-600', 'bg-yellow-800', 'bg-purple-500','bg-fuchsia-500'];\n      for (let [index, file] of files.entries()) {\n        if (window.electron.getExt(file) === '.json') {\n          const conversationId = window.electron.getBasename(file, '.json');\n          const conversationItem = document.createElement('div');\n          const color = (index <= colors.length-1) ? colors[index] : colors[Math.floor(Math.random() * colors.length)]\n          conversationItem.classList.add('p-2', color, 'transition-transform', \"text-black\", 'tranform', 'hover:scale-105', 'transition', 'duration-600', 'ease-in-out', 'scale-100', 'infinite', 'hover:bg-blue-800', 'decoration-underline', 'decoration-pink-400', 'dark:decoration-fuchsia-500', 'dark:hover:bg-cyan-700', 'cursor-pointer', 'rounded-lg', \"space-y-2\",\"w-full\", \"sm:w-[90%]\", \"md:w-[80%]\", \"lg:w-[90%]\", \"whitespace-nowrap\", \"max-w-full\", \"overflow-auto\", \"scrollbar-hide\");\n          conversationItem.setAttribute('data-text', conversationId);\n\n          conversationItem.textContent = conversationId;\n          conversationItem.onclick = () => renderConversationFromFile(conversationItem, conversationId);\n          conversationsPanel.appendChild(conversationItem);\n\n          //Chat Options\n          conversationItem.addEventListener('contextmenu', (event) => {\n\n            // Prevent the default context menu\n            event.preventDefault();\n\n            const ChatOpts = document.getElementById('chatOptions-overlay');\n            const renameBt = document.getElementById('renameBt');\n            ChatOpts.classList.remove('hidden');\n            document.getElementById('CornfirmDelete').addEventListener('click', () => {\n              const _delete = window.electron.deleteChat(storagePath, conversationId)\n              if (_delete){\n                  window.showDeletionStatus(\"text-red-400\", `Deleted ${conversationId}`)\n                  console.log(`Deleted ${conversationId}`);\n              } else{\n\n              }\n              document.getElementById('chatOptions-overlay').classList.add('hidden');\n              document.getElementById('confirm-modal').classList.add('hidden');\n              fetchConversations();\n            });\n            renameBt.addEventListener('click', () =>{\n              ChatOpts.classList.add('hidden'); //Hide the chat options as they are nolonger needed\n              selectedItem = event;\n              modalTitle.textContent = `Rename ${conversationItem.getAttribute('data-text')}`;\n              modal.classList.remove('hidden');\n\n              renameButton.addEventListener('click', () => {\n                try{\n                  const newName = `${conversationId[0]}-${newNameInput.value.trim()}`;\n                  if (conversationItem && newNameInput.value.trim() !== '') {\n                    const rename = window.electron.Rename(storagePath, conversationId, newName)\n                    if (rename){\n                      conversationItem.textContent = newName;\n                      conversationItem.setAttribute('data-text', newName);\n                      modal.classList.add('hidden');\n                    }\n                  }\n                  fetchConversations();\n                }catch (err){\n                  console.log(\"Failed to rename file\", err)\n                }\n              });\n\n              cancelButton.addEventListener('click', () => {\n                modal.classList.add('hidden');\n              });\n\n              //Hide modal once clicked outside\n              modal.addEventListener('click', (event) => {\n                if (event.target === modal) {\n                  modal.classList.add('hidden');\n                }\n              });\n\n              newNameInput.addEventListener('keypress', (event) => {\n                //event.preventDefault()\n                event.stopPropagation()\n                if (event.key === 'Enter') {\n                  renameButton.click();\n                }\n              });\n\n            });\n          });\n        }\n\n    }\n    } else {\n      console.log(\"No conversations saved!\")\n    }\n  } catch (err) {\n    console.error('Error reading conversation files:', err);\n  }\n}\n\n// Function to render a conversation from a file\nasync function renderConversationFromFile(item, conversationId) {\n  // Remove animation from previous item as it active item is changing\n  if (activeItem){\n    activeItem.classList.remove('animate-heartpulse');\n  }\n  activeItem = item;\n  item.classList.add('animate-heartpulse');\n  const [conversationData, model] = await conversationManager.loadConversation(conversationId);\n  //console.log(conversationData, model)\n  if (conversationData) {\n    window.electron.setSuperCId(conversationId);  //Set global conversation id to the current conversation id\n    //console.log(conversationData)\n    conversationManager.renderConversation(conversationData, model);\n  } else {\n    alert(`Conversation ${conversationId} not found.`);\n  }\n}\n\n// Listen for updates messages from ipc for Chat models and update the history files\nwindow.electron.receive('fromMain-ToChat', (data) => {\n  let Chat = data\n  try {\n    let conversationId = window.electron.getSuperCId() || window.electron.getNewChatUUId();\n    console.log('ChatUpdated::');\n    if (Chat.length > 1) {\n      conversationManager.saveConversation(Chat, conversationId);\n      console.log(\"Saved conversation, size:\", Chat.length);\n    }\n    } catch (err) {\n      console.log(\"Outer loop error:\", err);\n  }\n\n});\n\n\n// Listen for updates messages from ipc for Vision models and update the history files\nwindow.electron.receive('fromMain-ToVision', (data) => {\n  console.log(\"Vision\")\n  try {\n    let VChat = data\n    //console.log(JSON.stringify(VChat));\n    let VconversationId = window.electron.getSuperCId() || window.electron.getNewVisionUUId()\n    console.log(\"VChatUpdated::\");\n    if (VChat && VChat.length > 1) {\n      conversationManager.saveConversation(VChat, VconversationId);\n      console.log(\"Saved V conversation, size:\", VChat.length);\n    } else if (typeof VChat === 'object' && Object.keys(VChat).length > 1) {\n      conversationManager.saveConversation(VChat, VconversationId);\n      //console.log(\"Saved V conversation, size length\", VChat.length);\n    } else {\n      console.log(\"VChat is not an array or object with more than one entry.\");\n    }\n  } catch (err) {\n    console.error(\"Error in VChatUpdated handler:\", err);\n  }\n});\n\ncheckAndCreateDirectory();\n// Fetch and display conversations on page load\nfetchConversations();\n//AutoChatHistSync();\ndocument.addEventListener('NewConversationOpened', function() {\n  fetchConversations();\n})\n"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","_defineProperties","_toPropertyKey","key","toPrimitive","String","_toPrimitive","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","storagePath","window","electron","joinPath","home_dir","chatArea","document","getElementById","conversationsPanel","escapeHTML","activeItem","modal","modalTitle","newNameInput","renameButton","cancelButton","_checkAndCreateDirectory","_callee3","_context3","mkdir","console","log","t0","error","ConversationManager","_classCallCheck","this","_saveConversation","_callee","conversationData","conversationId","filePath","_context","concat","write","_x","_x2","_loadConversation","_callee2","model","data","_context2","stat","startsWith","read","_x3","role","content","fileDataUrl","undefined","fileType","messageContent","text","url","addToVisionChat","addToChat","_this","innerHTML","message","renderUserMessage","toLocaleLowerCase","renderVisionAssistantMessage","renderTextAssistantMessage","CreateNew","implementUserCopy","copyBMan","addCopyListeners","check","send","fileDict","fileTypeItem","find","item","fileMessage","images","map","image","userText","userMessageId","Math","random","toString","substring","copyButtonId","getFileType","getFileUrl","userMessage","createElement","className","messageHtml","fileContainerId","fileHtml","join","filesContainer","appendChild","aiMessageId","aiMessage","classList","add","marked","visionMessageId","visionMessage","conversationManager","fetchConversations","_fetchConversations","_callee4","files","colors","_iterator","_step","_loop","_context5","readDir","_createForOfIteratorHelper","entries","_step$value","index","file","conversationItem","color","_context4","_slicedToArray","getExt","getBasename","floor","setAttribute","textContent","onclick","renderConversationFromFile","addEventListener","event","preventDefault","ChatOpts","renameBt","remove","deleteChat","showDeletionStatus","selectedItem","getAttribute","newName","trim","Rename","err","target","stopPropagation","click","t1","t2","_x4","_x5","_renderConversationFromFile","_callee5","_yield$conversationMa","_yield$conversationMa2","_context6","loadConversation","setSuperCId","renderConversation","alert","receive","Chat","getSuperCId","getNewChatUUId","saveConversation","VChat","VconversationId","getNewVisionUUId","checkAndCreateDirectory"],"sourceRoot":""}