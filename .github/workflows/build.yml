name: Build Electron App

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [win32, darwin, linux]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.18.1'
        npm-version: '10.9.2'

    - name: Cache node modules
      uses: actions/cache@v4
      with:
        path: node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

    - name: Install build tools
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential
        
    - name: Install dependencies
      run: npm install --no-cache --verbose --force

    - name: List node_modules contents
      run: ls -la node_modules/http-proxy-agent

    - name: Install http-proxy-agent again
      run: npm install http-proxy-agent@latest

    - name: List node_modules contents again
      run: ls -la node_modules/http-proxy-agent
      
    - name: Print Node.js version
      run: node -v

    - name: Print npm version
      run: npm -v

    - name: List installed packages
      run: npm ls --depth=0

    - name: Ensure build directory exists
      run: mkdir -p dist

    - name: Build for ${{ matrix.platform }}
      run: npm run dist -- --linux --win --mac
      if: matrix.platform == 'all'
      env:
        CI: true

    - name: Build for ${{ matrix.platform }}
      run: npm run dist -- --${{ matrix.platform }}
      env:
        CI: true
        
    - name: Check if build directory exists
      run: |
        if [ ! -d "dist" ]; then
        echo "Error: dist directory not found."
        exit 1
        fi
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: electron-app-${{ matrix.platform }}
        path: dist

